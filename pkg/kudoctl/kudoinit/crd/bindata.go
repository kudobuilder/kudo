// Code generated for package crd by go-bindata DO NOT EDIT. (@generated)
// sources:
// config/crds/kudo.dev_instances.yaml
// config/crds/kudo.dev_operators.yaml
// config/crds/kudo.dev_operatorversions.yaml
package crd

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configCrdsKudoDev_instancesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x5a\x5b\x6f\x1b\xb9\x15\x7e\xd7\xaf\x38\xf0\x3e\x38\xc6\x5a\xa3\xc6\x05\x8a\x42\x28\x0a\xa4\x4e\xb6\x50\xbb\xb5\x8d\xc8\x4e\xb1\xc8\xa6\x00\x45\x1e\x69\x58\x73\xc8\x09\x2f\x92\xd5\xcd\xfe\xf7\xe2\x90\x33\xa3\xcb\xcc\xe8\xb2\xdd\x6c\xf9\x92\x88\x22\xcf\xe5\xe3\x77\x2e\xa4\x35\x18\x0e\x87\x03\x56\xca\x0f\x68\x9d\x34\x7a\x0c\xac\x94\xf8\xe2\x51\xd3\x27\x97\x3d\xff\xd1\x65\xd2\x8c\x96\xaf\x67\xe8\xd9\xeb\xc1\xb3\xd4\x62\x0c\xb7\xc1\x79\x53\xbc\x47\x67\x82\xe5\xf8\x16\xe7\x52\x4b\x2f\x8d\x1e\x14\xe8\x99\x60\x9e\x8d\x07\x00\x4c\x6b\xe3\x19\x4d\x3b\xfa\x08\xc0\x8d\xf6\xd6\x28\x85\x76\xb8\x40\x9d\x3d\x87\x19\xce\x82\x54\x02\x6d\xd4\x50\xeb\x5f\xfe\x2e\xbb\xc9\xfe\x30\x00\xe0\x16\xe3\xf6\x47\x59\xa0\xf3\xac\x28\xc7\xa0\x83\x52\x03\x00\xcd\x0a\x1c\x83\xd4\xce\x33\xcd\xd1\x65\xcf\x41\x98\x4c\xe0\x72\xe0\x4a\xe4\xa4\x6c\x61\x4d\x28\xc7\xd0\xcc\xa7\x2d\x95\x1d\xc9\x87\x49\xb5\x3b\x4e\x29\xe9\xfc\xdf\x77\xa6\xbf\x97\xce\xc7\xaf\x4a\x15\x2c\x53\x5b\xda\xe2\xac\x93\x7a\x11\x14\xb3\x9b\xf9\x01\x80\xe3\xa6\xc4\x31\xdc\x91\xaa\x92\x71\x14\x34\x17\x66\xb6\xc2\xa9\x52\xef\x3c\xf3\xc1\x8d\xe1\xa7\x9f\x07\x00\x4b\xa6\xa4\x88\x5e\xa6\x2f\x4d\x89\xfa\xcd\xc3\xe4\xc3\xef\xa7\x3c\xc7\x82\xa5\x49\x00\x81\x8e\x5b\x59\xc6\x75\x8d\x89\x20\x1d\xf8\x1c\x21\x2d\x85\xb9\xb1\xf1\x63\x63\x28\xbc\x79\x98\x64\x95\x80\xd2\x9a\x12\xad\x97\xb5\x11\x34\xb6\x0e\xbd\x99\xdb\x53\x75\x49\xb6\xa4\x35\x20\xe8\x98\x31\xa9\xac\x0e\x0b\x05\xb8\xa4\xdc\xcc\xc1\xe7\xd2\x81\xc5\xd2\xa2\x43\x9d\x0e\x7e\x4b\x2c\xd0\x12\xa6\xc1\xcc\xfe\x8d\xdc\x67\x30\x45\x4b\x42\xc0\xe5\x26\x28\x41\xdc\x58\xa2\xf5\x60\x91\x9b\x85\x96\xff\x69\x24\x3b\xf0\x26\xaa\x54\xcc\x63\x75\x24\xf5\x90\xda\xa3\xd5\x4c\x11\x8a\x01\xaf\x81\x69\x01\x05\x5b\x83\x45\xd2\x01\x41\x6f\x49\x8b\x4b\x5c\x06\xff\x30\x96\x20\x9a\x9b\x31\xe4\xde\x97\x6e\x3c\x1a\x2d\xa4\xaf\x69\xce\x4d\x51\x04\x2d\xfd\x7a\x14\xc9\x2a\x67\xc1\x1b\xeb\x46\x02\x97\xa8\x46\x4e\x2e\x86\xcc\xf2\x5c\x7a\xe4\x3e\x58\x1c\xb1\x52\x0e\xa3\xe1\x3a\xb2\x3c\x2b\xc4\x37\xcd\x59\x5f\x6e\x59\xea\xd7\x44\x0b\xe7\xad\xd4\x8b\x66\x3a\xb2\xb0\x17\x77\x22\x23\x9d\x2f\xab\xb6\x25\xfb\x37\xf0\xd2\x14\xa1\xf2\xfe\xdd\xf4\x11\x6a\xa5\xf1\x08\x76\x31\x8f\x68\x6f\xb6\xb9\x0d\xf0\x04\x94\xd4\x73\xb4\xe9\xe0\xe6\xd6\x14\x51\x22\x6a\x51\x1a\xa9\x7d\xfc\xc0\x95\x44\xbd\x0b\xba\x0b\xb3\x42\x7a\x3a\xe9\xcf\x01\x9d\xa7\xf3\xc9\xe0\x36\x06\x3b\xcc\x10\x42\x29\x98\x47\x91\xc1\x44\xc3\x2d\x2b\x50\xdd\x32\x87\x5f\x1d\x76\x42\xd8\x0d\x09\xd2\xe3\xc0\x6f\xe7\xa8\xdd\x85\x09\xad\x66\xba\x4e\x26\x9d\x27\x54\x07\xe1\xb4\x44\xbe\x13\x1a\x02\x9d\xb4\x44\x5f\xcf\x3c\x12\xe9\xeb\x95\xd9\x96\xa8\xae\x70\xac\xc2\xdf\x32\x6f\x6c\x47\x5c\xb6\x2c\xb8\xdf\x5d\x1b\xcd\x95\x73\x89\x44\x1a\x8b\x73\xb4\x48\x39\xc2\x1b\xe2\x50\xfa\x8a\xef\xef\xd9\x13\x5f\xf3\x25\xdb\x9b\xef\xb3\x16\x7a\x93\x48\xa7\xc1\x6f\x1e\x26\x75\xe2\x48\xf9\x02\x6b\x3b\x5b\x1a\x7b\x0f\xaf\x1e\x73\x89\x4a\x3c\x30\x9f\x1f\xd5\x7a\x39\x99\x27\x35\x31\x8c\x22\x1c\xa5\x44\x8e\x3b\xf9\x28\x26\x4d\x64\x22\x4d\x76\x88\x04\x20\xb6\x59\xac\xd6\x5f\xa7\xa0\xa9\x62\x73\x93\xc3\x3c\x93\x1a\x58\xca\xea\xf0\xb7\xe9\xfd\xdd\xe8\xaf\x26\xd9\xda\x29\x93\x71\x8e\xce\x25\xaa\x14\xa8\xfd\x35\xb8\xc0\x73\x60\xae\x66\xd1\x94\xbe\xc9\x0a\xa6\xe5\x1c\x9d\xcf\x2a\x0d\x68\xdd\xc7\x9b\x4f\x5d\x98\x01\x7c\x67\x2c\xe0\x0b\x2b\x4a\x85\xd7\x20\x13\xca\x4d\x16\xa8\x49\x21\x5d\x02\xa2\x91\x07\x2b\xe9\x73\xd9\xed\x38\x83\xd2\x88\xca\xe1\x55\x74\xd4\xb3\x67\x04\x53\x39\x1a\x10\x94\x7c\xc6\x31\x5c\x10\xcb\xb6\x4c\xfc\x89\x4a\xee\xcf\x17\x9d\x32\x5f\xad\x72\xb4\x08\x17\xb4\xe4\x22\x19\xd6\x24\x7a\x9a\xab\xf9\xb1\x31\xd0\xe7\xcc\x83\xb7\x72\xb1\x40\x8b\xdd\x68\xc6\xec\x45\x59\xe1\x0a\x8c\x25\xdf\xb5\xd9\x12\x10\xc5\xd2\x99\x55\x61\x22\x5a\x06\x7f\xbc\xf9\xd4\x63\xed\x2e\x4e\x20\xb5\xc0\x17\xb8\x01\xa9\x13\x2a\xa5\x11\x57\x19\x3c\x46\x46\xac\xb5\x67\x2f\xa4\x87\xe7\xc6\xa1\x06\xa3\xd5\xba\xdb\x5a\x03\x39\x5b\x22\x38\x53\x20\xac\x50\xa9\x61\xca\x22\x02\x56\x6c\x4d\xfe\xd7\xc7\x45\x0c\x63\x50\x32\xeb\x77\x4b\x68\xa7\xd4\xc7\xfb\xb7\xf7\xe3\x64\x15\x51\x68\xa1\xc9\x14\x4a\xcd\x73\x49\x85\x92\x2a\x64\x4a\xf7\xc4\xc9\x08\x47\x48\xe4\xf0\x06\x78\xce\xf4\x02\x3b\xc5\x46\x4f\x11\xe6\x81\x12\x70\x76\x79\x6e\xb4\xee\xd7\xba\x7a\x74\xd4\xbc\xfd\xc4\xf0\x7f\xaa\x1c\x27\xb9\x15\xdb\xd0\xa3\x6e\xdd\x6d\xf1\xf9\xa0\x5b\xd4\x10\x5b\x8d\x1e\xa3\x67\xc2\x70\x47\x4e\x71\x2c\xbd\x1b\x99\x25\xda\xa5\xc4\xd5\x68\x65\xec\xb3\xd4\x8b\x21\x11\x71\x98\x98\xe0\x46\xb1\xb9\x1d\x7d\x13\xff\xf9\x45\x5e\xc4\x76\xf5\x34\x57\xe2\xd2\xdf\xc2\x1f\xd2\xe3\x46\x67\xbb\x53\x37\x43\xa7\x56\xa5\xcb\x69\x5d\x1c\xf7\x76\x52\x48\xac\x72\xc9\xf3\xba\xb3\xdd\x64\xcf\xce\x18\x29\x98\x48\x29\x97\xe9\xf5\x57\xa7\x2d\x01\x19\x2c\xd9\xb3\x1e\x56\xf7\xaa\x21\xd3\x82\xfe\xef\xa4\xf3\x34\x7f\x36\x72\x41\x9e\x10\xa4\x4f\x93\xb7\xbf\x0d\x99\x83\x3c\x3b\x22\x3b\xbb\x38\x1a\x25\xb3\xac\x40\x8f\xb6\xd5\xc0\x30\x21\xe2\xcd\x95\xa9\x87\x03\x4d\xce\x2f\xd2\xa9\x98\x7e\xf7\x82\x3c\xf8\x63\x8d\xdc\xe5\x63\x2c\x86\xcc\x22\xf8\x95\xa1\xf4\x4f\x2d\x1c\xed\x07\xac\x05\x00\x67\x9a\xda\xeb\xa6\x02\x8e\x01\x5e\x5f\xb5\x0c\x95\x5a\x48\x8b\xdc\xab\x35\xf8\xdc\x9a\xb0\xc8\xab\x86\x3c\x96\x0e\xe0\xc6\x5a\x74\xa5\xd1\x82\x8a\x4a\x83\x4a\x9d\xde\xb7\x7b\xda\xec\xa1\xc1\xac\xa5\xa5\x60\x25\xc0\xcd\x15\xb4\x74\x39\xf4\xf1\x66\x52\x11\x64\x57\xde\x36\x1e\xf1\x13\x65\x93\xee\xc6\x0e\xfe\x99\x4b\x85\x8d\x37\xf0\xea\xf5\x55\xed\xb9\x83\x9c\x95\x25\x6a\x47\xa5\xde\xae\xc1\xcb\x02\x81\x41\x70\x68\xab\x02\xd6\xb6\x97\x6d\x5c\xbd\x06\xb6\x31\xfb\xd5\xcd\xd5\x06\xd0\x04\x78\x0c\x74\x47\x57\x24\xd1\x5c\xa8\x9d\xf4\x21\xbd\x63\xb4\x24\xaf\x72\xd4\x5b\xec\x02\x61\xd0\xe9\xcb\x4b\x5f\x99\x02\x98\x2d\x32\x52\x8f\x56\x1a\x21\x39\xcc\x18\x7f\x0e\x65\xec\xbf\x7a\x5b\x19\x8a\x0e\x2b\x45\x7d\xc3\xc3\x17\xe9\x22\xa8\xd5\xde\xb9\x54\x98\xc1\x9b\x86\xb7\x6a\x5d\xf5\x66\x26\xa2\x62\x8d\x29\xda\xa0\x1a\x4b\x04\xe2\xa8\x62\x33\x41\x65\x76\xa3\x24\xe5\x11\xc2\xc3\x06\xad\x23\x31\x14\xd3\x6e\xaf\xe6\xb7\x64\xde\x19\x8f\x63\xd8\x39\xd5\xea\xf0\xea\xdb\x50\x04\x34\xb6\x5d\xa4\xb1\x87\x7b\x6d\x4c\x63\xa7\x37\x99\xc2\xed\xd3\xfb\xf7\xef\xee\x1e\xbf\xff\xa1\x8a\x02\xba\x54\xde\xc7\x2b\xcd\xd6\x23\xc7\xd6\xa3\x12\xbc\x9a\xdc\x5e\x11\xb4\xc2\xe8\x36\xaf\x62\xe3\x96\xf0\xac\xac\xbd\xde\xee\x84\x56\x52\x29\x8a\x2f\xae\x90\x59\xd2\xf4\x8e\xf1\x7c\x2f\x06\x5b\x32\x73\x46\x81\x1a\xb4\xfc\x1c\x10\x28\x31\x3a\x53\xdf\x05\x22\x6f\xc8\xf5\x28\x62\x46\xc9\x72\xb8\xa1\x9a\xf4\x49\x21\x35\x80\x1d\x6c\xd5\xb8\x22\x71\xfb\xd9\xef\xd0\x35\xac\xac\xe2\xa9\x2b\x81\x1f\x4c\xfa\xd5\x6b\xd4\xb1\xbc\xdf\x9c\xf1\x34\xae\x07\xce\x4a\xa2\x45\xba\xf2\x36\x57\xdd\x58\x15\x8c\x52\x26\x9c\x7f\xa3\x3b\xa5\xfa\x10\xc6\xf1\x51\x84\x24\x25\xa2\xe4\x46\x09\x57\x9f\xc1\xe4\x6d\xf5\xce\x73\x0d\x52\x73\x15\x44\x97\x22\x1a\x4f\x4f\x93\xb7\x2e\x03\xf8\x0b\x72\x16\x1c\xf5\xdf\xc4\x9a\x4b\x0f\xf7\x77\xdf\xff\x40\xc9\x24\xad\xa8\x28\x42\x2a\x35\x30\x25\xd3\x6b\x54\x72\x20\xee\xee\x93\x5f\x59\xd8\xa0\x24\xb5\x47\xed\x63\x1c\xe4\xa8\x4a\x07\x05\x5d\xa1\x5c\xb0\x95\x17\xa4\x2c\x7e\x1b\x8b\x5f\xa7\x48\x61\x62\x1f\xbf\x40\x4f\x9c\x9f\xab\xf8\xca\xf2\xab\xd4\xc7\xee\xc7\x8f\x16\x2f\xba\x9f\x3f\x12\x1d\xb6\x1f\x40\xcc\xac\xca\x9f\xad\x17\x90\x13\x1e\x40\x88\xc7\xd3\x4e\x4a\x9e\x56\xa9\x77\x8c\xbc\x78\x68\xa4\xc1\xf6\xdb\x64\xbc\xb3\xa7\xe9\x58\x16\x63\x8c\xfe\xa8\xe1\x31\x47\xd7\x75\xff\xa1\xca\x9c\xae\xf4\xd1\xa5\x74\x52\xde\x32\xed\xa2\x45\x8e\xf6\x76\x8f\x2f\x70\x47\x65\xaa\x43\x66\x9d\xd3\xe0\x4b\xcf\xd6\x8d\x88\xc3\x63\xd9\x21\x3c\xee\x79\x67\xad\xb1\xf1\xd3\x9f\x86\x71\xfc\x39\x4e\x3f\x60\xca\xc0\xdb\xb2\xff\xd5\xa7\xbb\x43\xf6\x8f\x87\xcd\x5a\xf6\x98\xfd\x6d\xb2\x61\x58\xff\x3b\xfc\xf6\x74\xd9\xed\xbd\x3d\x4a\x4e\xb0\x7b\xd9\x6b\xf7\x17\xf8\x8e\x79\xa6\x00\x23\x6e\x8d\xe8\xf8\x9f\x5b\x53\x94\x0a\x7d\x17\x39\x48\xee\x97\xf6\xbb\xc1\xa1\x64\x0d\xa0\x98\xf3\x4f\xe9\xa5\x74\xf3\xd7\x8d\xce\xb0\x9f\x1b\x5b\x30\x3f\x06\x5a\x3b\xa4\x66\xa7\x73\x95\x0e\x4a\xb1\x99\xc2\x31\x78\x1b\xba\x97\x1c\x4c\xbe\x00\x05\x3a\xc7\x16\x9d\xf5\xe3\xe8\xde\xbe\x7b\xf0\xd1\x8d\x65\xce\x5c\x37\x40\x00\xd2\x63\xd1\xf3\xd5\x5e\x98\x3f\x90\x94\x53\xc2\x9c\xd6\xf5\x08\x3c\x7c\x5c\x69\x1c\x84\xe8\x24\x7f\xd3\xe8\x87\xeb\x0c\x21\xfd\x75\xbb\x1e\xbf\x7e\xfd\x3e\xd3\x40\x2c\x0f\xda\x77\xf0\x80\x3b\x5c\x98\x7a\x2c\x4f\x38\x65\xd2\x7b\x50\xe8\x29\x47\x9d\xc6\x09\x07\x9e\xc6\x49\x80\xa4\x71\xec\xf0\xcf\x16\x78\x9c\x08\x69\x9c\x4f\x87\xa3\x22\xe1\x54\xc2\x9c\xe9\x54\xef\x9d\xba\x6b\x19\xb3\x96\x75\xbf\xb0\x9e\x20\xe8\xb0\x88\x43\xd0\x7e\x8d\xe8\x3a\x02\x50\x4f\x87\xfc\xb5\x7a\xe4\xff\xad\x4b\xee\x11\xb9\xdb\x3b\x9f\xdb\x27\xf7\xd9\xb9\xd3\x3d\x9f\xdc\x29\x1f\x01\xfc\x00\x79\x76\x00\x77\x4a\x72\xac\xfe\x32\x32\x43\x40\x1d\x9f\x42\xe2\x93\xce\x2c\x78\x02\x8d\xa7\xbf\x8e\x12\x60\x69\xf1\x2c\x01\xda\xbe\xfa\x5b\x81\x96\xa8\xe2\xf0\x73\x48\x6f\x8d\x1a\xd6\xac\x50\xf1\x0f\x0a\x46\x3b\x29\xe2\xfd\xd1\xc9\x85\x96\x73\xc9\x99\xf6\xb0\x8a\x4f\x25\x51\x9d\xf4\x97\xed\xbb\x83\x36\xfb\xd6\x9f\x7e\x0d\xd8\x9b\xda\xfc\x44\xa3\xfa\x35\x48\x33\x15\x83\x64\x58\xfd\x2e\x63\xf3\x2d\x40\xba\x0a\x6c\xb5\x25\xce\x1b\x4b\x39\x35\xcd\x6c\x22\x8c\x71\x8e\xa5\x47\x71\xb7\xff\x3b\x8d\x8b\xd4\x5b\xd5\x3f\xc3\x88\x1f\xb9\xd1\xe9\x32\xe0\xc6\xf0\xf1\xd3\x20\x49\x45\xf1\xa1\x36\x86\x26\xff\x1b\x00\x00\xff\xff\x45\x41\x85\x78\xd8\x22\x00\x00")

func configCrdsKudoDev_instancesYamlBytes() ([]byte, error) {
	return bindataRead(
		_configCrdsKudoDev_instancesYaml,
		"config/crds/kudo.dev_instances.yaml",
	)
}

func configCrdsKudoDev_instancesYaml() (*asset, error) {
	bytes, err := configCrdsKudoDev_instancesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/crds/kudo.dev_instances.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configCrdsKudoDev_operatorsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x8f\xdc\x36\x0c\xbd\xfb\x57\x10\xe9\x21\x97\x8e\xa7\x69\x81\xa2\xf0\x2d\xd8\xe6\x10\xb4\x9b\x06\xd9\x60\x2f\x45\x0f\xb4\xc5\x99\x61\xd7\x96\x54\x92\x1a\x74\xf3\xeb\x0b\x49\x9e\xcf\x9d\xd9\x4d\x0b\xd4\x37\x3d\x89\x7c\xd4\xe3\x87\xd5\x2c\x16\x8b\x06\x23\xdf\x93\x28\x07\xdf\x01\x46\xa6\xbf\x8d\x7c\x5e\x69\xfb\xf0\x93\xb6\x1c\x96\xdb\x37\x3d\x19\xbe\x69\x1e\xd8\xbb\x0e\x6e\x92\x5a\x98\x3e\x91\x86\x24\x03\xfd\x4c\x2b\xf6\x6c\x1c\x7c\x33\x91\xa1\x43\xc3\xae\x01\x40\xef\x83\x61\x86\x35\x2f\x01\x86\xe0\x4d\xc2\x38\x92\x2c\xd6\xe4\xdb\x87\xd4\x53\x9f\x78\x74\x24\x85\x61\xc7\xbf\xfd\xae\xfd\xbe\xfd\xb1\x01\x18\x84\x8a\xf9\x67\x9e\x48\x0d\xa7\xd8\x81\x4f\xe3\xd8\x00\x78\x9c\xa8\x83\x10\x49\xd0\x82\x68\xfb\x90\x5c\x68\x1d\x6d\x1b\x8d\x34\x64\xb2\xb5\x84\x14\x3b\xd8\xe3\xd5\x64\x8e\xa3\xde\xe1\xb7\xd9\xba\x40\x23\xab\xfd\x72\x02\xff\xca\x6a\x65\x2b\x8e\x49\x70\x3c\x62\x2b\xa8\xb2\x5f\xa7\x11\xe5\x80\x37\x00\x3a\x84\x48\x1d\x7c\xc8\x54\x11\x07\x72\x0d\xc0\x16\x47\x76\xe5\x1a\x95\x3c\x44\xf2\x6f\x3f\xbe\xbf\xff\xe1\x6e\xd8\xd0\x84\x15\x04\x70\xa4\x83\x70\x2c\xe7\xf6\x31\x00\x2b\xd8\x86\xa0\x1e\x85\x55\x90\xb2\xdc\x31\xc2\xdb\x8f\xef\x67\xf3\x28\x19\x34\xde\x5d\x31\x7f\x47\x39\xdd\x63\x67\x44\xaf\x73\x24\xf5\x0c\xb8\x9c\x45\xaa\x84\x73\x2e\xc8\x81\x56\xea\xb0\x02\xdb\xb0\x82\x50\x14\x52\xf2\x35\xaf\x47\x6e\x21\x1f\x41\x0f\xa1\xff\x93\x06\x6b\xe1\x8e\x24\x3b\x01\xdd\x84\x34\xba\x9c\xfa\x2d\x89\x81\xd0\x10\xd6\x9e\xbf\xec\x3d\x2b\x58\x28\x94\x23\x1a\xcd\x8a\xef\x3e\xf6\x46\xe2\x71\xcc\x1a\x26\xfa\x16\xd0\x3b\x98\xf0\x11\x84\x32\x07\x24\x7f\xe4\xad\x1c\xd1\x16\x6e\x83\x10\xb0\x5f\x85\x0e\x36\x66\x51\xbb\xe5\x72\xcd\xb6\xab\xe2\x21\x4c\x53\xf2\x6c\x8f\xcb\x52\x8b\xdc\xa7\x9c\xd0\xa5\xa3\x2d\x8d\x4b\xe5\xf5\x02\x65\xd8\xb0\xd1\x60\x49\x68\x89\x91\x17\x25\x70\x5f\x8a\xb8\x9d\xdc\x37\x32\x97\xbc\xbe\x3e\x8a\xd4\x1e\x73\xd6\xd5\x84\xfd\x7a\x0f\x97\x22\xbb\xaa\x7b\xae\xb5\x9c\x5d\x9c\xcd\x6a\xfc\x07\x79\x33\x94\x55\xf9\xf4\xee\xee\x33\xec\x48\x4b\x0a\x4e\x35\x2f\x6a\x1f\xcc\xf4\x20\x7c\x16\x8a\xfd\x8a\xa4\x26\x6e\x25\x61\x2a\x1e\xc9\xbb\x18\xd8\x5b\x59\x0c\x23\x93\x3f\x15\x5d\x53\x3f\xb1\xe5\x4c\xff\x95\x48\x2d\xe7\xa7\x85\x9b\xd2\xcb\xd0\x13\xa4\xe8\xd0\xc8\xb5\xf0\xde\xc3\x0d\x4e\x34\xde\xa0\xd2\xff\x2e\x7b\x56\x58\x17\x59\xd2\x97\x85\x3f\x1e\x41\xa7\x07\xab\x5a\x7b\x78\x37\x2b\x2e\x66\x68\xd7\x82\x77\x91\x86\x93\xd6\x70\xa4\x2c\xb9\x7c\x0d\x8d\x72\xd1\x9f\xcc\x91\xeb\xdd\x78\xce\x70\xb2\x71\xe5\x2a\xa5\x8e\x52\x4f\xe2\xc9\x48\x2f\x34\xf3\x0b\x96\x2e\xfc\x5b\x9b\x09\xd9\x1b\xb2\x27\xd1\x73\x1b\x36\x9a\x9e\x80\x67\xaa\xdd\xee\xcd\x67\xbc\x27\xcd\x53\x61\x3f\xd0\x0e\xfe\xdb\x27\x9e\xae\xa9\x56\x3f\x9a\x90\xc7\x4b\x1b\x67\x21\xbc\xcb\xe7\x4a\x6b\x79\x08\x05\xc3\xb1\x1a\x03\x3a\x27\xa4\x65\xe2\xe4\x3a\xc4\xa1\x34\xc1\x45\x97\xf5\x7f\xe1\x9e\x8d\xf7\x59\x21\x0f\x4e\xbe\x22\xe6\xfc\xc3\xa8\xd3\x20\x29\x49\xb1\x82\x20\x10\x64\x8d\x9e\xbf\x94\x51\x5b\xc0\xff\x10\xc3\xc5\xca\x3f\xde\x42\x11\x7c\x6c\xce\x83\x2e\xbf\xaf\x5b\xf4\xbc\x22\xb5\xaf\xae\x9e\x24\x4f\x32\x74\xe5\xec\xe5\x86\x34\xb4\xa4\x2f\xb7\x64\x39\x76\xd2\x94\xa1\xd7\x3c\xf6\x9e\xef\xca\x0b\x9c\x67\xd0\xe1\x09\x32\xbf\x76\xf6\x50\x89\x6a\x31\xbf\x3b\x0e\xbb\x00\x95\xb7\x03\x93\x54\x2b\x49\x2d\x08\xae\x69\x46\x0e\x57\xc2\x61\xa0\x68\xe4\x3e\x9c\xbf\x43\x5e\xbd\x3a\x79\x66\x94\xe5\x10\xbc\xe3\xfa\x72\x82\xdf\xff\x68\xaa\x57\x72\xf7\xbb\x60\x32\xf8\x4f\x00\x00\x00\xff\xff\x86\x23\x1d\x6c\xb8\x09\x00\x00")

func configCrdsKudoDev_operatorsYamlBytes() ([]byte, error) {
	return bindataRead(
		_configCrdsKudoDev_operatorsYaml,
		"config/crds/kudo.dev_operators.yaml",
	)
}

func configCrdsKudoDev_operatorsYaml() (*asset, error) {
	bytes, err := configCrdsKudoDev_operatorsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/crds/kudo.dev_operators.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configCrdsKudoDev_operatorversionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x1b\x5d\x6f\xe4\xb6\xf1\xdd\xbf\x62\x70\x79\xb8\x24\xf0\xee\x36\x57\xa0\x28\xf6\xed\x70\x97\x14\x6e\x2e\xb6\x71\xf6\xa5\x28\xd2\x00\xe6\x8a\xb3\x2b\xc6\x14\xc9\x92\xd4\xee\x6d\x0f\xf9\xef\xc5\xf0\x43\xda\x0f\x49\x2b\xdb\xe7\xf4\xaa\x17\x7b\x25\x72\x38\xdf\x5f\x1a\x9d\x4d\x26\x93\x33\x66\xc4\xcf\x68\x9d\xd0\x6a\x0e\xcc\x08\xfc\xe8\x51\xd1\x2f\x37\xbd\xff\xab\x9b\x0a\x3d\x5b\x7f\xb7\x40\xcf\xbe\x3b\xbb\x17\x8a\xcf\xe1\x4d\xed\xbc\xae\xde\xa3\xd3\xb5\x2d\xf0\x2d\x2e\x85\x12\x5e\x68\x75\x56\xa1\x67\x9c\x79\x36\x3f\x03\x60\x4a\x69\xcf\xe8\xb6\xa3\x9f\x00\x85\x56\xde\x6a\x29\xd1\x4e\x56\xa8\xa6\xf7\xf5\x02\x17\xb5\x90\x1c\x6d\x38\x21\x9f\xbf\xfe\xd3\xf4\xd5\xf4\x2f\x67\x00\x85\xc5\xb0\xfd\x56\x54\xe8\x3c\xab\xcc\x1c\x54\x2d\xe5\x19\x80\x62\x15\xce\x41\x1b\xb4\xcc\x6b\x9b\x76\xba\xe9\x7d\xcd\xf5\x94\xe3\xfa\xcc\x19\x2c\xe8\xcc\x95\xd5\xb5\x99\x43\x73\x3f\xee\x4c\xe8\x44\x52\xae\x12\x90\x44\x7e\x78\x22\x85\xf3\x3f\x76\x3d\x7d\x27\x9c\x0f\x2b\x8c\xac\x2d\x93\xc7\x28\x84\x87\x4e\xa8\x55\x2d\x99\x3d\x7a\x7c\x06\xe0\x0a\x6d\x70\x0e\x97\x84\x86\x61\x05\xf2\x33\x80\x35\x93\x82\x07\x4a\x23\x62\xda\xa0\x7a\x7d\x7d\xf1\xf3\x9f\x6f\x8a\x12\x2b\x16\x6f\x02\x70\x74\x85\x15\x26\xac\x3b\x44\x0c\x84\x03\x5f\x22\xc4\x1d\xb0\xd4\x36\xfc\x3c\x44\x0f\x5e\x5f\x5f\x4c\x13\x38\x63\xe9\xa9\x17\x99\x1d\x74\xed\xa8\x41\x73\xef\xe0\xe0\x97\x84\x59\x3a\x94\x93\xe0\x31\x9e\x9c\x8e\x40\x0e\x2e\xe2\xa0\x97\xe0\x4b\xe1\xc0\xa2\xb1\xe8\x50\x45\x55\xd8\x01\x0b\xb4\x84\x29\xd0\x8b\xdf\xb0\xf0\x53\xb8\xc1\x80\x27\xb8\x52\xd7\x92\x93\xb6\xac\xd1\x7a\xb0\x58\xe8\x95\x12\xff\x69\x20\x3b\xf0\x3a\x1c\x29\x99\xc7\x24\x8f\x7c\x09\xe5\xd1\x2a\x26\x89\xa7\x35\x9e\x03\x53\x1c\x2a\xb6\x05\x8b\x74\x06\xd4\x6a\x07\x5a\x58\xe2\xa6\xf0\x93\xb6\x08\x42\x2d\xf5\x1c\x4a\xef\x8d\x9b\xcf\x66\x2b\xe1\xb3\xe2\x17\xba\xaa\x6a\x25\xfc\x76\x16\xd4\x57\x2c\x6a\xaf\xad\x9b\x71\x5c\xa3\x9c\x39\xb1\x9a\x30\x5b\x94\xc2\x63\xe1\x6b\x8b\x33\x66\xc4\x24\x20\xae\x82\xde\x4f\x2b\xfe\x95\x4d\x56\xe2\x5e\xee\x60\xea\xb7\xa4\x05\xce\x5b\xa1\x56\xcd\xed\xa0\x90\xbd\x7c\x27\x85\x24\x31\xb3\xb4\x2d\xe2\xdf\xb2\x97\x6e\x11\x57\xde\x7f\x7f\x73\x0b\xf9\xd0\x20\x82\x7d\x9e\x07\x6e\xb7\xdb\x5c\xcb\x78\x62\x94\x50\x4b\xb4\x51\x70\x4b\xab\xab\x00\x11\x15\x37\x5a\x28\x1f\x7e\x14\x52\xa0\xda\x67\xba\xab\x17\x95\xf0\x24\xe9\x7f\xd7\xe8\x3c\xc9\x67\x0a\x6f\x82\xf9\xc3\x02\xa1\x36\x9c\x79\xe4\x53\xb8\x50\xf0\x86\x55\x28\xdf\x30\x87\xcf\xce\x76\xe2\xb0\x9b\x10\x4b\x4f\x33\x7e\xd7\x6b\xed\x2f\x8c\xdc\x6a\x6e\x67\xbf\xd2\x29\xa1\x03\x93\xbc\x31\x58\xec\x59\x08\x47\x27\x2c\x69\xb1\x67\x1e\x49\xf7\x0f\x36\x4c\x77\x00\x77\x19\x67\x34\x50\xd3\x61\xa0\xbd\x84\x41\xf4\xba\x0a\x0b\x42\xf1\x26\x3c\x3c\xdc\xb8\x47\xc3\x9b\x83\xc5\x0d\x01\x0c\x3c\x56\x86\x2c\x8e\x67\xfd\xf3\x25\xf3\x50\x30\x05\x0b\x3c\x00\x09\x50\x3b\xe4\x64\xa6\xe9\x70\xfa\x97\x29\x10\xca\x79\xa6\x0a\x8c\xbe\x01\x1b\x06\x4c\xc7\xd2\x92\xfd\xd9\x20\x0d\x57\x41\x66\xef\x71\x89\x16\xe9\x30\x52\x20\x26\x94\x03\x54\xba\x5e\x95\x41\xe7\x6c\x15\xbc\x11\xe1\x25\xd1\xc3\x56\xd7\x47\x24\x08\x45\xd2\xf6\xa0\x2d\x54\x9a\x8b\xe5\x36\xa0\x6c\x09\x2c\x49\x31\x79\xad\x83\x6d\x7d\x72\x83\x5e\xe7\xda\x49\xc2\xeb\xeb\x8b\xec\x50\x33\xaf\x6c\xa4\xe7\xe8\xc4\x41\x7e\xd1\xb5\x14\x28\xf9\x35\xf3\xe5\xc9\x53\x5f\x5e\x2c\x13\x7d\x41\xbc\x1a\x18\x18\x81\x51\x5c\x8d\x9f\x0e\x42\x44\xc6\xe3\xcd\x0e\x90\x00\x64\x85\x16\xd3\xfa\xf3\xe8\x4c\x92\xce\xb4\xbe\x9d\x44\x02\x2c\xc6\x3e\xf8\xfb\xcd\xd5\xe5\xec\x6f\x3a\xe2\xda\x09\x93\x15\x05\x3a\x17\x6d\xa7\x42\xe5\xcf\xc1\xd5\x45\x09\xcc\x65\xb3\xba\xa1\x27\xd3\x8a\x29\xb1\x44\xe7\xa7\xe9\x04\xb4\xee\x97\x57\xbf\x76\xf1\x0c\xe0\x07\x6d\x01\x3f\xb2\xca\x48\x3c\x07\x11\xb9\xdc\x78\xc7\xac\x3c\xc2\x45\x46\x34\xf0\x60\x23\x7c\x29\xba\x09\x67\x60\x34\x4f\x04\x6f\x02\xa1\x9e\xdd\x23\xe8\x44\x68\x8d\x20\xc5\x3d\xce\xe1\x05\x69\xd6\x0e\x8a\x9f\x28\x2b\xf9\xfd\x45\x27\xcc\xaf\x37\x25\x5a\x84\x17\xb4\xe4\x45\x44\xac\x09\x80\x74\x2f\xeb\x47\x8b\x60\xb0\x4b\x6f\xc5\x6a\x85\x16\xbb\xb9\x19\xbc\x3a\x79\xcb\x6f\x48\xbd\xc5\x12\x94\xde\x01\x10\xc0\x92\xcc\x0c\x16\x62\x29\x90\x1f\x21\xfc\xcb\xab\x5f\x7b\xb0\xdd\xe7\x13\x08\xc5\xf1\x23\xbc\x02\xa1\x22\x57\x8c\xe6\xdf\x4c\xe1\x36\x68\xc4\x56\x79\xf6\x91\xce\x29\x4a\xed\x50\x81\x56\x72\xdb\x8d\xad\x86\x92\xad\x11\x9c\xae\x10\x36\x28\xe5\x24\x7a\x25\x0e\x1b\xb6\x25\xfa\xb3\xb8\x48\xc3\x18\x18\x66\xfd\x7e\x6a\xd1\x09\xf5\xf6\xea\xed\xd5\x3c\x62\x45\x2a\xb4\x0a\x39\x14\x85\xac\xa5\xa0\x04\x82\x32\x87\x18\x06\x49\x27\x03\x3b\xea\xa8\x1c\xe4\xd6\x4a\xa6\x56\xc7\x5e\x0f\x82\xdb\x08\xdc\x5d\xd6\x14\x98\xa6\x2f\x1f\x6a\xad\x87\x39\x40\xbe\x3a\x72\x81\x43\xc7\xf0\x3f\x8a\xa8\xa3\xc8\x0a\x09\xfb\x49\xb2\x2e\x77\xf4\x79\x90\x2c\x2a\x1d\xac\x42\x8f\x81\x32\xae\x0b\x47\x44\x15\x68\xbc\x9b\xe9\x35\xda\xb5\xc0\xcd\x6c\xa3\xed\xbd\x50\xab\x09\x29\xe2\x24\x6a\x82\x9b\x85\xfc\x7f\xf6\x55\xf8\xf3\x28\x2a\x42\xd6\x3e\x8e\x94\xb0\xf4\x8f\xa0\x87\xce\x71\xb3\x07\x93\x93\x93\xc4\xb1\x51\xe9\xe5\x4d\x74\x08\xc5\xe1\x4e\x32\x89\x4d\x29\x8a\x32\x67\xfc\xad\xf7\xec\xb4\x91\x8a\xf1\xe8\x72\x99\xda\x3e\xbb\xda\x12\x23\x6b\x4b\xf8\x6c\x27\xa9\x02\x9d\x30\xc5\xe9\x7f\x27\x9c\xa7\xfb\x0f\xe6\x5c\x2d\x46\x18\xe9\x87\x8b\xb7\x7f\x8c\x32\xd7\xe2\xc1\x16\xd9\x99\xdd\xd2\x65\x98\x65\x15\x7a\xb4\x47\x09\x8c\xf0\x58\x75\x64\x35\x7b\x34\x5f\xe7\xdd\x50\x30\x43\x02\x49\xb5\x21\xb3\x82\x2d\x84\x14\x7e\x9b\x1c\x73\x57\xd5\xbd\x7f\x2d\x90\xbc\x79\xcc\x18\xbd\x08\x79\x27\x25\x0c\x6d\x12\x79\xec\xd5\x87\x92\x2f\x42\x74\xc9\x6a\xe9\xbb\x1e\x1d\x50\xf1\x36\xae\x8c\xc5\x56\xda\x96\xe2\x77\x0c\x95\x0d\x93\x68\x89\xb1\x7a\x2d\x78\x4f\xa0\x05\x58\xc4\xbc\xb1\x1f\x6b\x38\xa5\x6c\xfb\xd8\x8d\x41\xbf\xf9\xd1\x8a\x81\x81\xd4\x6a\x85\x76\x77\x29\xc9\xa2\xd4\x9b\x1e\xc4\x09\xeb\x96\xd0\x8d\x90\x32\x14\x73\x0e\xf9\xe3\x68\x10\xce\x48\xb6\xbd\xec\x09\x04\x87\x34\xb4\xab\x53\x89\x11\x4b\x8a\xc5\x16\x3e\x5c\xb8\x47\x21\xd0\x17\x82\x0e\x4e\x7e\x71\x99\xb2\x1f\xa2\x7f\xb7\xd2\x49\xa9\x6b\xc6\x24\xc5\xf9\x5c\x15\xf5\x30\x71\x29\x24\x86\x6e\xcc\x6e\xa2\x79\x17\xdb\x57\x6f\xae\x3e\x5c\xde\xde\x11\x14\x05\xb5\xcb\xe5\x7b\xb4\x15\x49\x1a\xd3\x03\x93\x85\xc4\x2c\xa5\x92\xff\x52\xb1\x28\x0d\xee\xdc\x48\x51\x30\x37\x07\xf8\xf4\x09\xa6\xc1\x16\xdd\x34\x9c\x02\xbf\xf7\x64\x97\x27\x78\x46\x15\x3d\x25\xd7\x23\xf8\xf6\x3e\x2d\x6d\xb2\x46\x97\x73\xea\x3d\x6b\xc9\x10\xc1\xeb\x3e\x83\xc1\xc6\xa4\x48\xdc\x4c\xca\xc6\x78\xdc\x39\xa5\xab\x9b\x12\x7d\x89\x76\xc7\x36\x49\x43\x5c\xbd\x5c\x8a\x61\xfb\x5a\x68\x2d\xb1\xb3\x66\x49\xd9\xf2\x08\x32\x6f\xe3\x4a\x10\x9c\x42\x4c\x20\x33\xd0\x28\x99\x8a\x6a\xb2\x42\xef\x00\x3f\x62\x51\x93\xcb\xda\x94\xd8\x27\xc6\x98\x0f\xb7\x0e\x33\xa4\x94\x2e\xeb\xd5\x45\x53\x2a\xa7\xee\xd8\x8e\x53\xba\x8b\x1d\x95\xbb\x1e\xc0\x14\x57\x23\x42\x21\x05\x0f\x58\x85\x94\x1e\x3f\x0a\xe7\x89\x87\xc4\xbe\x8d\x70\x08\xc2\xbf\x74\x70\xc7\xd1\x48\xbd\xbd\x7b\x94\x55\x05\xb7\x38\x09\x8b\x46\x30\x6f\x6b\x70\x47\x3f\xa2\xba\x93\x5b\xa5\xfd\x0d\x89\xa1\xbc\xb9\x8b\x27\x3e\x06\xa9\xde\xd8\x96\x1f\x31\x6b\xd9\x7e\xa5\x41\xdc\x3a\x0a\x1a\x8c\xf3\xd0\xd4\x66\xf2\x7a\x20\xb0\xec\xc7\x3f\xe2\x7a\x4b\x20\x03\x87\x96\xfe\xd1\x4b\xb8\x2e\x99\x0b\x34\x93\x34\x30\x76\x47\x16\x54\xb6\x91\x5b\xf0\x5d\x4e\x75\x38\x9c\x99\x00\x6f\x04\xd3\xd3\xc1\x15\x33\x84\x50\xd8\x16\xd5\x21\xd4\xb5\xe1\xe9\x60\x9d\xd4\x13\xf7\xfb\x4e\xda\x23\x5f\x0a\x17\x4a\x31\xe7\xd1\x24\xda\x73\xe9\xff\x63\x93\xf5\xf4\x80\xce\xad\xca\x1e\x6f\x7f\x8a\x3f\xf1\xea\x77\xfa\xf1\x3a\xa1\xdd\xf1\x0a\xd8\x0f\x41\xd9\xe3\xc2\x4d\xa0\x35\xb1\x9b\xb6\xee\x70\x3b\xf3\xa3\xe9\xa5\x0d\x00\x85\x1d\x16\x65\x56\x80\xf3\x9a\x9c\x27\x6b\xdb\xc0\x7d\xdc\x81\x53\xa2\xeb\x41\x7d\xa7\xe3\xe7\x72\xba\xef\x30\x60\x1d\xbb\x6f\xcd\x6b\x8e\xfe\x2b\x08\x5a\x17\x45\x7d\xd4\xd9\xdb\xbf\xc6\x48\x30\x5e\xa7\xe4\x98\xce\x1d\x23\xcd\xb4\x94\xb9\xfb\x93\xa7\x8e\xe2\xe0\x83\x8f\xee\x77\x43\xdd\xeb\x3a\x3d\xd9\x43\xc1\x39\x6f\x99\xc7\xd5\x76\xb4\x1a\x5f\x59\x8e\xb1\x65\xd7\xd8\x73\xa9\x37\x31\x2b\xaa\x17\x81\x2f\xb9\xab\x33\x2c\x63\xc9\xd4\x2c\x7a\x9d\x36\x83\x0a\x6f\x01\x39\xe8\xba\xc7\xe7\xec\xd2\x35\xc8\xd3\x93\x1c\x52\xb5\x94\x94\x4e\xcd\xc1\xdb\xba\x3b\x4b\x1b\x66\xdf\x30\xe3\x1e\xcb\xb2\x1d\xb6\xf4\x50\x36\x9e\x59\x8f\x0d\x86\x47\x91\xab\x0d\x12\x14\xc6\x5a\xaf\x45\x3f\x0f\x8f\x1e\xe4\x6b\xef\xa1\x9d\x56\xb7\x87\xc7\xbb\xe4\x21\x29\xed\x0b\xab\x81\xad\x99\x90\x29\x23\x8e\xbc\x1b\x78\x6f\x02\x23\x0b\xd5\x5b\xe6\xee\x63\x7d\xb7\x92\x7a\xc1\xe4\x39\x18\x2d\xb7\x95\xb6\xa6\x14\x05\x08\x8a\xc9\x55\x7e\x65\x99\xd1\x31\xf5\x42\x8a\xa2\xb3\x47\xd9\xe2\x18\x70\x7e\x60\x28\xef\xeb\xf9\x3d\xa1\xa4\x39\xb1\xf1\xf0\x3d\xd6\x00\x97\xc2\x6b\x2c\xac\x16\xc8\x5d\xe4\x82\x76\x4e\x64\x4a\x03\x20\x97\x1a\xba\x4c\x4a\xbd\xe9\x73\x06\x75\xec\xa3\xaf\xb5\xe0\xb0\xb1\x22\xbc\xad\x2c\xc2\x14\x01\xd4\x6a\x56\x31\xeb\x4a\x26\x65\xe8\x6d\x53\xf0\x88\xdd\x73\xad\xe4\x96\x52\xe4\x5e\x23\x29\xd0\x86\x64\x22\xf4\x68\x1d\x70\x34\xa8\x38\x81\xd6\xa9\x3a\x23\x1c\x7f\x14\x8a\x13\x8a\x08\x5c\x6f\x94\x13\x1c\xf3\xbb\xe9\xbe\x02\xcb\x18\xab\x59\x51\x82\x70\xe7\x11\x9d\x40\x3f\x15\x24\xa1\x07\x1a\xea\x0d\xa5\x7d\xec\x4a\xa7\xb3\x53\xae\xdd\x6b\xce\x64\x4d\xbf\x39\x1d\xed\xca\x51\x04\x17\x99\xcc\x05\x16\xba\x42\x60\xd5\x42\xac\x6a\x5d\xbb\xe6\xf5\x7d\xaa\x6f\xfa\xf2\x1f\x62\x8c\x9d\xc2\x3f\x10\x2a\xb1\x2a\x3d\x58\x5c\x0b\x27\x7c\x34\x92\x96\x88\xdd\x86\x74\x72\x2b\x43\x25\x49\xc6\x46\x81\x70\xae\xee\x29\xa8\x4e\x47\xee\xfe\x37\x95\xed\xb5\xa7\x6c\x3b\xf9\x06\x33\xa6\x79\xfd\x95\xd0\xd7\x54\xdd\x09\x26\xa9\xca\xd5\xe7\x83\x41\xac\x2d\x22\x68\x63\xa5\x5d\x98\x21\x38\x7c\x69\xbd\x47\xf7\xe9\x40\xc3\xb5\x1a\x48\x40\x4e\xd5\x97\x74\x2d\x99\x67\xf2\x69\x20\x72\x1d\xdc\xdf\x44\x19\x49\x8d\xde\xf7\xa0\x0f\x97\x50\x06\xf0\x1c\x62\x02\xad\xfa\xac\x68\x14\x71\x86\x15\xf7\x6c\x35\xc0\xa0\x3d\xa2\x50\x84\x66\x02\xe1\x9b\x77\x06\x13\x3d\x07\xa9\x0b\x26\x9b\x7b\x4b\x2d\x39\xda\x01\x8a\xb4\x25\x9b\xf9\xf0\xfe\x1d\x91\x94\x77\x79\x66\x17\x2c\x8c\x2c\x3d\x81\x9c\xd4\x22\x78\x92\xc4\x1b\x28\x3f\x08\x39\x96\x35\xbb\xaf\x17\x73\xc5\x12\x3b\x5a\x5f\x13\x6f\x7c\xdb\x05\xbb\xcb\x8f\x5d\x5f\x53\x82\xae\xc8\xc2\x6f\xe2\x60\x49\x7e\x5f\x80\xf0\xad\x61\x16\x95\xff\xb6\x1d\x0f\x58\xa1\x22\xf5\x0a\x45\x48\x83\xf8\x10\x60\xc2\x29\x8f\x1c\x18\x6d\xea\x80\x69\x80\x5d\x94\x42\xf2\x6f\x9b\x76\xca\x94\xc2\xd9\xb4\x69\x53\xf7\xa7\xae\x63\x58\x2a\xfa\x9a\x1e\x30\xa6\x72\xd8\x4f\xbf\x84\xc1\x34\x30\x42\x77\x17\x29\x75\x64\x91\xb4\xcc\x0f\x0e\x8b\xe1\x82\x81\x05\x40\x39\xb9\xc9\xc5\xa2\xe2\xed\x2b\x99\xa1\x8a\x73\x6c\x39\x86\x6a\x3d\xac\x45\xf1\x1a\x5d\x12\x2d\x3f\x27\xb0\x7b\x1c\xac\x71\x1e\x06\xab\x37\x31\x7b\x30\xb0\x51\xa5\xdc\x88\x62\x05\x46\xd5\x7b\x46\x0f\xe0\x3d\x02\xe3\x66\x66\xed\x09\xfa\x3d\x8a\x31\x9f\x8d\xe2\x0d\x53\xfe\x7b\x7b\xd2\x47\x0e\xc5\xd7\x41\x11\x3d\xa2\xa9\xd8\xf8\xc4\xc7\x35\x16\x07\xf8\xb7\x9f\xa4\xe7\x63\x62\x3d\x93\x5b\x4c\x8d\xc5\x87\x10\xfb\xcf\xd7\x3f\xbd\x6b\x11\x82\xe4\xbe\x8f\xce\x3c\x78\xa9\xe1\x92\xcb\x0e\x2e\x84\x6e\xd8\x1d\x47\x92\xe6\x03\xa9\xde\xe9\x9e\xdf\xea\x60\x56\x6d\x56\x96\x71\x12\xf8\x0f\x56\x57\x83\x85\xe0\x87\xbd\xa5\x81\xac\x58\x80\x1c\x54\x7f\xae\x9d\x43\x8b\xd0\x8f\xb5\x28\xa4\x18\x9f\xa7\x6e\xfc\x4c\xb3\x65\x8f\x9c\x2e\x3b\xe5\xa2\x87\x27\xcc\x9e\x36\x63\x76\xd2\xa0\x07\xe7\xcc\x9e\x38\x69\xd6\x57\x63\xa8\xc7\xcf\x9a\xf5\x65\xe9\x61\xda\xe7\x19\xa6\xcd\x9e\x63\xde\xec\x79\x26\xce\x9e\x69\xe6\xec\x19\xa7\xce\x9e\x34\x77\xd6\x57\x22\x29\xb9\x7d\xe4\xe4\x59\xbf\xb6\xe6\x97\x79\x0f\x9d\x3d\xeb\x6b\x2a\x1c\x4e\xa4\x8d\x98\x3e\x3b\x69\xc7\xfd\x49\xcf\x97\x3f\x83\xf6\xb9\x86\x00\xbe\x84\x49\xb4\x51\xb4\xf4\x4e\xa3\x7d\xa1\xf3\x68\x23\x26\x0e\x4e\xce\xa4\x3d\x75\x2a\xad\xaf\xb9\xe2\xfe\x2f\xe6\xd2\x4e\x72\xb0\x67\x36\xed\x8b\x9b\x4e\xfb\xfc\x6f\xf1\xd7\x0f\xfa\x32\xa2\xfb\x03\x0f\xcf\x7c\xed\x46\x7f\xe2\x11\x56\xef\x7d\xe4\xa1\x17\x0e\xed\x7a\xe4\x57\x1e\x1d\x28\x1c\xdc\x6a\x3f\x8a\x4b\xdf\xdf\x35\xb7\x02\x92\x93\xf4\x25\x5c\xfb\x14\x20\x9e\xbf\x53\x50\x39\xaf\x2d\x5b\xe5\x12\xab\xa5\x90\x92\x1c\xe3\x91\x5f\x1e\x7e\x12\xf7\x22\x46\xd9\xfc\x8d\x5b\xf8\x59\x68\x15\x8b\x16\x37\x87\x5f\x7e\x3d\x83\xd4\x5c\xc8\x49\x78\xb8\xf9\xdf\x00\x00\x00\xff\xff\xbf\x75\x40\x9b\x4a\x38\x00\x00")

func configCrdsKudoDev_operatorversionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_configCrdsKudoDev_operatorversionsYaml,
		"config/crds/kudo.dev_operatorversions.yaml",
	)
}

func configCrdsKudoDev_operatorversionsYaml() (*asset, error) {
	bytes, err := configCrdsKudoDev_operatorversionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/crds/kudo.dev_operatorversions.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config/crds/kudo.dev_instances.yaml":        configCrdsKudoDev_instancesYaml,
	"config/crds/kudo.dev_operators.yaml":        configCrdsKudoDev_operatorsYaml,
	"config/crds/kudo.dev_operatorversions.yaml": configCrdsKudoDev_operatorversionsYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"config": &bintree{nil, map[string]*bintree{
		"crds": &bintree{nil, map[string]*bintree{
			"kudo.dev_instances.yaml":        &bintree{configCrdsKudoDev_instancesYaml, map[string]*bintree{}},
			"kudo.dev_operators.yaml":        &bintree{configCrdsKudoDev_operatorsYaml, map[string]*bintree{}},
			"kudo.dev_operatorversions.yaml": &bintree{configCrdsKudoDev_operatorversionsYaml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
