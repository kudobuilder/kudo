// Code generated for package crd by go-bindata DO NOT EDIT. (@generated)
// sources:
// config/crds/kudo.dev_instances.yaml
// config/crds/kudo.dev_operators.yaml
// config/crds/kudo.dev_operatorversions.yaml
package crd

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configCrdsKudoDev_instancesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x5a\x5b\x6f\x1b\xb9\x15\x7e\xd7\xaf\x38\xf0\x3e\x38\xc6\x5a\xa3\xc6\x05\x8a\x42\x28\x0a\xa4\x4e\xb6\x50\xbb\xb5\x8d\xc8\x4e\xb1\xc8\xa6\x00\x45\x1e\x69\x58\x73\xc8\x09\x2f\x92\xd5\xcd\xfe\xf7\xe2\x90\x33\xa3\xcb\xcc\xe8\xb2\xdd\x6c\xf9\x92\x88\x22\xcf\xe5\xe3\x77\x2e\xa4\x35\x18\x0e\x87\x03\x56\xca\x0f\x68\x9d\x34\x7a\x0c\xac\x94\xf8\xe2\x51\xd3\x27\x97\x3d\xff\xd1\x65\xd2\x8c\x96\xaf\x67\xe8\xd9\xeb\xc1\xb3\xd4\x62\x0c\xb7\xc1\x79\x53\xbc\x47\x67\x82\xe5\xf8\x16\xe7\x52\x4b\x2f\x8d\x1e\x14\xe8\x99\x60\x9e\x8d\x07\x00\x4c\x6b\xe3\x19\x4d\x3b\xfa\x08\xc0\x8d\xf6\xd6\x28\x85\x76\xb8\x40\x9d\x3d\x87\x19\xce\x82\x54\x02\x6d\xd4\x50\xeb\x5f\xfe\x2e\xbb\xc9\xfe\x30\x00\xe0\x16\xe3\xf6\x47\x59\xa0\xf3\xac\x28\xc7\xa0\x83\x52\x03\x00\xcd\x0a\x1c\x83\xd4\xce\x33\xcd\xd1\x65\xcf\x41\x98\x4c\xe0\x72\xe0\x4a\xe4\xa4\x6c\x61\x4d\x28\xc7\xd0\xcc\xa7\x2d\x95\x1d\xc9\x87\x49\xb5\x3b\x4e\x29\xe9\xfc\xdf\x77\xa6\xbf\x97\xce\xc7\xaf\x4a\x15\x2c\x53\x5b\xda\xe2\xac\x93\x7a\x11\x14\xb3\x9b\xf9\x01\x80\xe3\xa6\xc4\x31\xdc\x91\xaa\x92\x71\x14\x34\x17\x66\xb6\xc2\xa9\x52\xef\x3c\xf3\xc1\x8d\xe1\xa7\x9f\x07\x00\x4b\xa6\xa4\x88\x5e\xa6\x2f\x4d\x89\xfa\xcd\xc3\xe4\xc3\xef\xa7\x3c\xc7\x82\xa5\x49\x00\x81\x8e\x5b\x59\xc6\x75\x8d\x89\x20\x1d\xf8\x1c\x21\x2d\x85\xb9\xb1\xf1\x63\x63\x28\xbc\x79\x98\x64\x95\x80\xd2\x9a\x12\xad\x97\xb5\x11\x34\xb6\x0e\xbd\x99\xdb\x53\x75\x49\xb6\xa4\x35\x20\xe8\x98\x31\xa9\xac\x0e\x0b\x05\xb8\xa4\xdc\xcc\xc1\xe7\xd2\x81\xc5\xd2\xa2\x43\x9d\x0e\x7e\x4b\x2c\xd0\x12\xa6\xc1\xcc\xfe\x8d\xdc\x67\x30\x45\x4b\x42\xc0\xe5\x26\x28\x41\xdc\x58\xa2\xf5\x60\x91\x9b\x85\x96\xff\x69\x24\x3b\xf0\x26\xaa\x54\xcc\x63\x75\x24\xf5\x90\xda\xa3\xd5\x4c\x11\x8a\x01\xaf\x81\x69\x01\x05\x5b\x83\x45\xd2\x01\x41\x6f\x49\x8b\x4b\x5c\x06\xff\x30\x96\x20\x9a\x9b\x31\xe4\xde\x97\x6e\x3c\x1a\x2d\xa4\xaf\x69\xce\x4d\x51\x04\x2d\xfd\x7a\x14\xc9\x2a\x67\xc1\x1b\xeb\x46\x02\x97\xa8\x46\x4e\x2e\x86\xcc\xf2\x5c\x7a\xe4\x3e\x58\x1c\xb1\x52\x0e\xa3\xe1\x3a\xb2\x3c\x2b\xc4\x37\xcd\x59\x5f\x6e\x59\xea\xd7\x44\x0b\xe7\xad\xd4\x8b\x66\x3a\xb2\xb0\x17\x77\x22\x23\x9d\x2f\xab\xb6\x25\xfb\x37\xf0\xd2\x14\xa1\xf2\xfe\xdd\xf4\x11\x6a\xa5\xf1\x08\x76\x31\x8f\x68\x6f\xb6\xb9\x0d\xf0\x04\x94\xd4\x73\xb4\xe9\xe0\xe6\xd6\x14\x51\x22\x6a\x51\x1a\xa9\x7d\xfc\xc0\x95\x44\xbd\x0b\xba\x0b\xb3\x42\x7a\x3a\xe9\xcf\x01\x9d\xa7\xf3\xc9\xe0\x36\x06\x3b\xcc\x10\x42\x29\x98\x47\x91\xc1\x44\xc3\x2d\x2b\x50\xdd\x32\x87\x5f\x1d\x76\x42\xd8\x0d\x09\xd2\xe3\xc0\x6f\xe7\xa8\xdd\x85\x09\xad\x66\xba\x4e\x26\x9d\x27\x54\x07\xe1\xb4\x44\xbe\x13\x1a\x02\x9d\xb4\x44\x5f\xcf\x3c\x12\xe9\xeb\x95\xd9\x96\xa8\xae\x70\xac\xc2\xdf\x32\x6f\x6c\x47\x5c\xb6\x2c\xb8\xdf\x5d\x1b\xcd\x95\x73\x89\x44\x1a\x8b\x73\xb4\x48\x39\xc2\x1b\xe2\x50\xfa\x8a\xef\xef\xd9\x13\x5f\xf3\x25\xdb\x9b\xef\xb3\x16\x7a\x93\x48\xa7\xc1\x6f\x1e\x26\x75\xe2\x48\xf9\x02\x6b\x3b\x5b\x1a\x7b\x0f\xaf\x1e\x73\x89\x4a\x3c\x30\x9f\x1f\xd5\x7a\x39\x99\x27\x35\x31\x8c\x22\x1c\xa5\x44\x8e\x3b\xf9\x28\x26\x4d\x64\x22\x4d\x76\x88\x04\x20\xb6\x59\xac\xd6\x5f\xa7\xa0\xa9\x62\x73\x93\xc3\x3c\x93\x1a\x58\xca\xea\xf0\xb7\xe9\xfd\xdd\xe8\xaf\x26\xd9\xda\x29\x93\x71\x8e\xce\x25\xaa\x14\xa8\xfd\x35\xb8\xc0\x73\x60\xae\x66\xd1\x94\xbe\xc9\x0a\xa6\xe5\x1c\x9d\xcf\x2a\x0d\x68\xdd\xc7\x9b\x4f\x5d\x98\x01\x7c\x67\x2c\xe0\x0b\x2b\x4a\x85\xd7\x20\x13\xca\x4d\x16\xa8\x49\x21\x5d\x02\xa2\x91\x07\x2b\xe9\x73\xd9\xed\x38\x83\xd2\x88\xca\xe1\x55\x74\xd4\xb3\x67\x04\x53\x39\x1a\x10\x94\x7c\xc6\x31\x5c\x10\xcb\xb6\x4c\xfc\x89\x4a\xee\xcf\x17\x9d\x32\x5f\xad\x72\xb4\x08\x17\xb4\xe4\x22\x19\xd6\x24\x7a\x9a\xab\xf9\xb1\x31\xd0\xe7\xcc\x83\xb7\x72\xb1\x40\x8b\xdd\x68\xc6\xec\x45\x59\xe1\x0a\x8c\x25\xdf\xb5\xd9\x12\x10\xc5\xd2\x99\x55\x61\x22\x5a\x06\x7f\xbc\xf9\xd4\x63\xed\x2e\x4e\x20\xb5\xc0\x17\xb8\x01\xa9\x13\x2a\xa5\x11\x57\x19\x3c\x46\x46\xac\xb5\x67\x2f\xa4\x87\xe7\xc6\xa1\x06\xa3\xd5\xba\xdb\x5a\x03\x39\x5b\x22\x38\x53\x20\xac\x50\xa9\x61\xca\x22\x02\x56\x6c\x4d\xfe\xd7\xc7\x45\x0c\x63\x50\x32\xeb\x77\x4b\x68\xa7\xd4\xc7\xfb\xb7\xf7\xe3\x64\x15\x51\x68\xa1\xc9\x14\x4a\xcd\x73\x49\x85\x92\x2a\x64\x4a\xf7\xc4\xc9\x08\x47\x48\xe4\xf0\x06\x78\xce\xf4\x02\x3b\xc5\x46\x4f\x11\xe6\x81\x12\x70\x76\x79\x6e\xb4\xee\xd7\xba\x7a\x74\xd4\xbc\xfd\xc4\xf0\x7f\xaa\x1c\x27\xb9\x15\xdb\xd0\xa3\x6e\xdd\x6d\xf1\xf9\xa0\x5b\xd4\x10\x5b\x8d\x1e\xa3\x67\xc2\x70\x47\x4e\x71\x2c\xbd\x1b\x99\x25\xda\xa5\xc4\xd5\x68\x65\xec\xb3\xd4\x8b\x21\x11\x71\x98\x98\xe0\x46\xb1\xb9\x1d\x7d\x13\xff\xf9\x45\x5e\xc4\x76\xf5\x34\x57\xe2\xd2\xdf\xc2\x1f\xd2\xe3\x46\x67\xbb\x53\x37\x43\xa7\x56\xa5\xcb\x69\x5d\x1c\xf7\x76\x52\x48\xac\x72\xc9\xf3\xba\xb3\xdd\x64\xcf\xce\x18\x29\x98\x48\x29\x97\xe9\xf5\x57\xa7\x2d\x01\x19\x2c\xd9\xb3\x1e\x56\xf7\xaa\x21\xd3\x82\xfe\xef\xa4\xf3\x34\x7f\x36\x72\x41\x9e\x10\xa4\x4f\x93\xb7\xbf\x0d\x99\x83\x3c\x3b\x22\x3b\xbb\x38\x1a\x25\xb3\xac\x40\x8f\xb6\xd5\xc0\x30\x21\xe2\xcd\x95\xa9\x87\x03\x4d\xce\x2f\xd2\xa9\x98\x7e\xf7\x82\x3c\xf8\x63\x8d\xdc\xe5\x63\x2c\x86\xcc\x22\xf8\x95\xa1\xf4\x4f\x2d\x1c\xed\x07\xac\x05\x00\x67\x9a\xda\xeb\xa6\x02\x8e\x01\x5e\x5f\xb5\x0c\x95\x5a\x48\x8b\xdc\xab\x35\xf8\xdc\x9a\xb0\xc8\xab\x86\x3c\x96\x0e\xe0\xc6\x5a\x74\xa5\xd1\x82\x8a\x4a\x83\x4a\x9d\xde\xb7\x7b\xda\xec\xa1\xc1\xac\xa5\xa5\x60\x25\xc0\xcd\x15\xb4\x74\x39\xf4\xf1\x66\x52\x11\x64\x57\xde\x36\x1e\xf1\x13\x65\x93\xee\xc6\x0e\xfe\x99\x4b\x85\x8d\x37\xf0\xea\xf5\x55\xed\xb9\x83\x9c\x95\x25\x6a\x47\xa5\xde\xae\xc1\xcb\x02\x81\x41\x70\x68\xab\x02\xd6\xb6\x97\x6d\x5c\xbd\x06\xb6\x31\xfb\xd5\xcd\xd5\x06\xd0\x04\x78\x0c\x74\x47\x57\x24\xd1\x5c\xa8\x9d\xf4\x21\xbd\x63\xb4\x24\xaf\x72\xd4\x5b\xec\x02\x61\xd0\xe9\xcb\x4b\x5f\x99\x02\x98\x2d\x32\x52\x8f\x56\x1a\x21\x39\xcc\x18\x7f\x0e\x65\xec\xbf\x7a\x5b\x19\x8a\x0e\x2b\x45\x7d\xc3\xc3\x17\xe9\x22\xa8\xd5\xde\xb9\x54\x98\xc1\x9b\x86\xb7\x6a\x5d\xf5\x66\x26\xa2\x62\x8d\x29\xda\xa0\x1a\x4b\x04\xe2\xa8\x62\x33\x41\x65\x76\xa3\x24\xe5\x11\xc2\xc3\x06\xad\x23\x31\x14\xd3\x6e\xaf\xe6\xb7\x64\xde\x19\x8f\x63\xd8\x39\xd5\xea\xf0\xea\xdb\x50\x04\x34\xb6\x5d\xa4\xb1\x87\x7b\x6d\x4c\x63\xa7\x37\x99\xc2\xed\xd3\xfb\xf7\xef\xee\x1e\xbf\xff\xa1\x8a\x02\xba\x54\xde\xc7\x2b\xcd\xd6\x23\xc7\xd6\xa3\x12\xbc\x9a\xdc\x5e\x11\xb4\xc2\xe8\x36\xaf\x62\xe3\x96\xf0\xac\xac\xbd\xde\xee\x84\x56\x52\x29\x8a\x2f\xae\x90\x59\xd2\xf4\x8e\xf1\x7c\x2f\x06\x5b\x32\x73\x46\x81\x1a\xb4\xfc\x1c\x10\x28\x31\x3a\x53\xdf\x05\x22\x6f\xc8\xf5\x28\x62\x46\xc9\x72\xb8\xa1\x9a\xf4\x49\x21\x35\x80\x1d\x6c\xd5\xb8\x22\x71\xfb\xd9\xef\xd0\x35\xac\xac\xe2\xa9\x2b\x81\x1f\x4c\xfa\xd5\x6b\xd4\xb1\xbc\xdf\x9c\xf1\x34\xae\x07\xce\x4a\xa2\x45\xba\xf2\x36\x57\xdd\x58\x15\x8c\x52\x26\x9c\x7f\xa3\x3b\xa5\xfa\x10\xc6\xf1\x51\x84\x24\x25\xa2\xe4\x46\x09\x57\x9f\xc1\xe4\x6d\xf5\xce\x73\x0d\x52\x73\x15\x44\x97\x22\x1a\x4f\x4f\x93\xb7\x2e\x03\xf8\x0b\x72\x16\x1c\xf5\xdf\xc4\x9a\x4b\x0f\xf7\x77\xdf\xff\x40\xc9\x24\xad\xa8\x28\x42\x2a\x35\x30\x25\xd3\x6b\x54\x72\x20\xee\xee\x93\x5f\x59\xd8\xa0\x24\xb5\x47\xed\x63\x1c\xe4\xa8\x4a\x07\x05\x5d\xa1\x5c\xb0\x95\x17\xa4\x2c\x7e\x1b\x8b\x5f\xa7\x48\x61\x62\x1f\xbf\x40\x4f\x9c\x9f\xab\xf8\xca\xf2\xab\xd4\xc7\xee\xc7\x8f\x16\x2f\xba\x9f\x3f\x12\x1d\xb6\x1f\x40\xcc\xac\xca\x9f\xad\x17\x90\x13\x1e\x40\x88\xc7\xd3\x4e\x4a\x9e\x56\xa9\x77\x8c\xbc\x78\x68\xa4\xc1\xf6\xdb\x64\xbc\xb3\xa7\xe9\x58\x16\x63\x8c\xfe\xa8\xe1\x31\x47\xd7\x75\xff\xa1\xca\x9c\xae\xf4\xd1\xa5\x74\x52\xde\x32\xed\xa2\x45\x8e\xf6\x76\x8f\x2f\x70\x47\x65\xaa\x43\x66\x9d\xd3\xe0\x4b\xcf\xd6\x8d\x88\xc3\x63\xd9\x21\x3c\xee\x79\x67\xad\xb1\xf1\xd3\x9f\x86\x71\xfc\x39\x4e\x3f\x60\xca\xc0\xdb\xb2\xff\xd5\xa7\xbb\x43\xf6\x8f\x87\xcd\x5a\xf6\x98\xfd\x6d\xb2\x61\x58\xff\x3b\xfc\xf6\x74\xd9\xed\xbd\x3d\x4a\x4e\xb0\x7b\xd9\x6b\xf7\x17\xf8\x8e\x79\xa6\x00\x23\x6e\x8d\xe8\xf8\x9f\x5b\x53\x94\x0a\x7d\x17\x39\x48\xee\x97\xf6\xbb\xc1\xa1\x64\x0d\xa0\x98\xf3\x4f\xe9\xa5\x74\xf3\xd7\x8d\xce\xb0\x9f\x1b\x5b\x30\x3f\x06\x5a\x3b\xa4\x66\xa7\x73\x95\x0e\x4a\xb1\x99\xc2\x31\x78\x1b\xba\x97\x1c\x4c\xbe\x00\x05\x3a\xc7\x16\x9d\xf5\xe3\xe8\xde\xbe\x7b\xf0\xd1\x8d\x65\xce\x5c\x37\x40\x00\xd2\x63\xd1\xf3\xd5\x5e\x98\x3f\x90\x94\x53\xc2\x9c\xd6\xf5\x08\x3c\x7c\x5c\x69\x1c\x84\xe8\x24\x7f\xd3\xe8\x87\xeb\x0c\x21\xfd\x75\xbb\x1e\xbf\x7e\xfd\x3e\xd3\x40\x2c\x0f\xda\x77\xf0\x80\x3b\x5c\x98\x7a\x2c\x4f\x38\x65\xd2\x7b\x50\xe8\x29\x47\x9d\xc6\x09\x07\x9e\xc6\x49\x80\xa4\x71\xec\xf0\xcf\x16\x78\x9c\x08\x69\x9c\x4f\x87\xa3\x22\xe1\x54\xc2\x9c\xe9\x54\xef\x9d\xba\x6b\x19\xb3\x96\x75\xbf\xb0\x9e\x20\xe8\xb0\x88\x43\xd0\x7e\x8d\xe8\x3a\x02\x50\x4f\x87\xfc\xb5\x7a\xe4\xff\xad\x4b\xee\x11\xb9\xdb\x3b\x9f\xdb\x27\xf7\xd9\xb9\xd3\x3d\x9f\xdc\x29\x1f\x01\xfc\x00\x79\x76\x00\x77\x4a\x72\xac\xfe\x32\x32\x43\x40\x1d\x9f\x42\xe2\x93\xce\x2c\x78\x02\x8d\xa7\xbf\x8e\x12\x60\x69\xf1\x2c\x01\xda\xbe\xfa\x5b\x81\x96\xa8\xe2\xf0\x73\x48\x6f\x8d\x1a\xd6\xac\x50\xf1\x0f\x0a\x46\x3b\x29\xe2\xfd\xd1\xc9\x85\x96\x73\xc9\x99\xf6\xb0\x8a\x4f\x25\x51\x9d\xf4\x97\xed\xbb\x83\x36\xfb\xd6\x9f\x7e\x0d\xd8\x9b\xda\xfc\x44\xa3\xfa\x35\x48\x33\x15\x83\x64\x58\xfd\x2e\x63\xf3\x2d\x40\xba\x0a\x6c\xb5\x25\xce\x1b\x4b\x39\x35\xcd\x6c\x22\x8c\x71\x8e\xa5\x47\x71\xb7\xff\x3b\x8d\x8b\xd4\x5b\xd5\x3f\xc3\x88\x1f\xb9\xd1\xe9\x32\xe0\xc6\xf0\xf1\xd3\x20\x49\x45\xf1\xa1\x36\x86\x26\xff\x1b\x00\x00\xff\xff\x45\x41\x85\x78\xd8\x22\x00\x00")

func configCrdsKudoDev_instancesYamlBytes() ([]byte, error) {
	return bindataRead(
		_configCrdsKudoDev_instancesYaml,
		"config/crds/kudo.dev_instances.yaml",
	)
}

func configCrdsKudoDev_instancesYaml() (*asset, error) {
	bytes, err := configCrdsKudoDev_instancesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/crds/kudo.dev_instances.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configCrdsKudoDev_operatorsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x8f\xdc\x36\x0c\xbd\xfb\x57\x10\xe9\x21\x97\x8e\xa7\x69\x81\xa2\xf0\x2d\xd8\xe6\x10\xb4\x9b\x06\xd9\x60\x2f\x45\x0f\xb4\xc5\x99\x61\xd7\x96\x54\x92\x1a\x74\xf3\xeb\x0b\x49\x9e\xcf\x9d\xd9\x4d\x0b\xd4\x37\x3d\x89\x7c\xd4\xe3\x87\xd5\x2c\x16\x8b\x06\x23\xdf\x93\x28\x07\xdf\x01\x46\xa6\xbf\x8d\x7c\x5e\x69\xfb\xf0\x93\xb6\x1c\x96\xdb\x37\x3d\x19\xbe\x69\x1e\xd8\xbb\x0e\x6e\x92\x5a\x98\x3e\x91\x86\x24\x03\xfd\x4c\x2b\xf6\x6c\x1c\x7c\x33\x91\xa1\x43\xc3\xae\x01\x40\xef\x83\x61\x86\x35\x2f\x01\x86\xe0\x4d\xc2\x38\x92\x2c\xd6\xe4\xdb\x87\xd4\x53\x9f\x78\x74\x24\x85\x61\xc7\xbf\xfd\xae\xfd\xbe\xfd\xb1\x01\x18\x84\x8a\xf9\x67\x9e\x48\x0d\xa7\xd8\x81\x4f\xe3\xd8\x00\x78\x9c\xa8\x83\x10\x49\xd0\x82\x68\xfb\x90\x5c\x68\x1d\x6d\x1b\x8d\x34\x64\xb2\xb5\x84\x14\x3b\xd8\xe3\xd5\x64\x8e\xa3\xde\xe1\xb7\xd9\xba\x40\x23\xab\xfd\x72\x02\xff\xca\x6a\x65\x2b\x8e\x49\x70\x3c\x62\x2b\xa8\xb2\x5f\xa7\x11\xe5\x80\x37\x00\x3a\x84\x48\x1d\x7c\xc8\x54\x11\x07\x72\x0d\xc0\x16\x47\x76\xe5\x1a\x95\x3c\x44\xf2\x6f\x3f\xbe\xbf\xff\xe1\x6e\xd8\xd0\x84\x15\x04\x70\xa4\x83\x70\x2c\xe7\xf6\x31\x00\x2b\xd8\x86\xa0\x1e\x85\x55\x90\xb2\xdc\x31\xc2\xdb\x8f\xef\x67\xf3\x28\x19\x34\xde\x5d\x31\x7f\x47\x39\xdd\x63\x67\x44\xaf\x73\x24\xf5\x0c\xb8\x9c\x45\xaa\x84\x73\x2e\xc8\x81\x56\xea\xb0\x02\xdb\xb0\x82\x50\x14\x52\xf2\x35\xaf\x47\x6e\x21\x1f\x41\x0f\xa1\xff\x93\x06\x6b\xe1\x8e\x24\x3b\x01\xdd\x84\x34\xba\x9c\xfa\x2d\x89\x81\xd0\x10\xd6\x9e\xbf\xec\x3d\x2b\x58\x28\x94\x23\x1a\xcd\x8a\xef\x3e\xf6\x46\xe2\x71\xcc\x1a\x26\xfa\x16\xd0\x3b\x98\xf0\x11\x84\x32\x07\x24\x7f\xe4\xad\x1c\xd1\x16\x6e\x83\x10\xb0\x5f\x85\x0e\x36\x66\x51\xbb\xe5\x72\xcd\xb6\xab\xe2\x21\x4c\x53\xf2\x6c\x8f\xcb\x52\x8b\xdc\xa7\x9c\xd0\xa5\xa3\x2d\x8d\x4b\xe5\xf5\x02\x65\xd8\xb0\xd1\x60\x49\x68\x89\x91\x17\x25\x70\x5f\x8a\xb8\x9d\xdc\x37\x32\x97\xbc\xbe\x3e\x8a\xd4\x1e\x73\xd6\xd5\x84\xfd\x7a\x0f\x97\x22\xbb\xaa\x7b\xae\xb5\x9c\x5d\x9c\xcd\x6a\xfc\x07\x79\x33\x94\x55\xf9\xf4\xee\xee\x33\xec\x48\x4b\x0a\x4e\x35\x2f\x6a\x1f\xcc\xf4\x20\x7c\x16\x8a\xfd\x8a\xa4\x26\x6e\x25\x61\x2a\x1e\xc9\xbb\x18\xd8\x5b\x59\x0c\x23\x93\x3f\x15\x5d\x53\x3f\xb1\xe5\x4c\xff\x95\x48\x2d\xe7\xa7\x85\x9b\xd2\xcb\xd0\x13\xa4\xe8\xd0\xc8\xb5\xf0\xde\xc3\x0d\x4e\x34\xde\xa0\xd2\xff\x2e\x7b\x56\x58\x17\x59\xd2\x97\x85\x3f\x1e\x41\xa7\x07\xab\x5a\x7b\x78\x37\x2b\x2e\x66\x68\xd7\x82\x77\x91\x86\x93\xd6\x70\xa4\x2c\xb9\x7c\x0d\x8d\x72\xd1\x9f\xcc\x91\xeb\xdd\x78\xce\x70\xb2\x71\xe5\x2a\xa5\x8e\x52\x4f\xe2\xc9\x48\x2f\x34\xf3\x0b\x96\x2e\xfc\x5b\x9b\x09\xd9\x1b\xb2\x27\xd1\x73\x1b\x36\x9a\x9e\x80\x67\xaa\xdd\xee\xcd\x67\xbc\x27\xcd\x53\x61\x3f\xd0\x0e\xfe\xdb\x27\x9e\xae\xa9\x56\x3f\x9a\x90\xc7\x4b\x1b\x67\x21\xbc\xcb\xe7\x4a\x6b\x79\x08\x05\xc3\xb1\x1a\x03\x3a\x27\xa4\x65\xe2\xe4\x3a\xc4\xa1\x34\xc1\x45\x97\xf5\x7f\xe1\x9e\x8d\xf7\x59\x21\x0f\x4e\xbe\x22\xe6\xfc\xc3\xa8\xd3\x20\x29\x49\xb1\x82\x20\x10\x64\x8d\x9e\xbf\x94\x51\x5b\xc0\xff\x10\xc3\xc5\xca\x3f\xde\x42\x11\x7c\x6c\xce\x83\x2e\xbf\xaf\x5b\xf4\xbc\x22\xb5\xaf\xae\x9e\x24\x4f\x32\x74\xe5\xec\xe5\x86\x34\xb4\xa4\x2f\xb7\x64\x39\x76\xd2\x94\xa1\xd7\x3c\xf6\x9e\xef\xca\x0b\x9c\x67\xd0\xe1\x09\x32\xbf\x76\xf6\x50\x89\x6a\x31\xbf\x3b\x0e\xbb\x00\x95\xb7\x03\x93\x54\x2b\x49\x2d\x08\xae\x69\x46\x0e\x57\xc2\x61\xa0\x68\xe4\x3e\x9c\xbf\x43\x5e\xbd\x3a\x79\x66\x94\xe5\x10\xbc\xe3\xfa\x72\x82\xdf\xff\x68\xaa\x57\x72\xf7\xbb\x60\x32\xf8\x4f\x00\x00\x00\xff\xff\x86\x23\x1d\x6c\xb8\x09\x00\x00")

func configCrdsKudoDev_operatorsYamlBytes() ([]byte, error) {
	return bindataRead(
		_configCrdsKudoDev_operatorsYaml,
		"config/crds/kudo.dev_operators.yaml",
	)
}

func configCrdsKudoDev_operatorsYaml() (*asset, error) {
	bytes, err := configCrdsKudoDev_operatorsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/crds/kudo.dev_operators.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configCrdsKudoDev_operatorversionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x1b\x5d\x6f\xe3\xc6\xf1\xdd\xbf\x62\x70\x79\xb8\x24\xb0\xa4\xe6\x0a\x14\x85\xde\x0e\xbe\xa4\x70\x73\xb1\x8d\xb3\x2f\x45\x91\x06\xf0\x8a\x3b\x12\x37\x5e\xee\x6e\x77\x97\xd2\xa9\x87\xfc\xf7\x62\xf6\x83\x94\x64\x92\xa2\xbf\xd2\x2b\x5f\x6c\x91\xcb\xd9\xf9\xfe\xda\xe1\xc9\x64\x32\x39\x61\x46\xfc\x8c\xd6\x09\xad\xe6\xc0\x8c\xc0\x4f\x1e\x15\xfd\x72\xd3\xbb\xbf\xba\xa9\xd0\xb3\xf5\x77\x0b\xf4\xec\xbb\x93\x3b\xa1\xf8\x1c\xce\x6a\xe7\x75\xf5\x01\x9d\xae\x6d\x81\xef\x70\x29\x94\xf0\x42\xab\x93\x0a\x3d\xe3\xcc\xb3\xf9\x09\x00\x53\x4a\x7b\x46\xb7\x1d\xfd\x04\x28\xb4\xf2\x56\x4b\x89\x76\xb2\x42\x35\xbd\xab\x17\xb8\xa8\x85\xe4\x68\xc3\x0e\x79\xff\xf5\x9f\xa6\x6f\xa6\x7f\x39\x01\x28\x2c\x86\xd7\x6f\x44\x85\xce\xb3\xca\xcc\x41\xd5\x52\x9e\x00\x28\x56\xe1\x1c\xb4\x41\xcb\xbc\xb6\xe9\x4d\x37\xbd\xab\xb9\x9e\x72\x5c\x9f\x38\x83\x05\xed\xb9\xb2\xba\x36\x73\x68\xee\xc7\x37\x13\x3a\x91\x94\xcb\x04\x24\x91\x1f\x9e\x48\xe1\xfc\x8f\x5d\x4f\xdf\x0b\xe7\xc3\x0a\x23\x6b\xcb\xe4\x7d\x14\xc2\x43\x27\xd4\xaa\x96\xcc\xde\x7b\x7c\x02\xe0\x0a\x6d\x70\x0e\x17\x84\x86\x61\x05\xf2\x13\x80\x35\x93\x82\x07\x4a\x23\x62\xda\xa0\x7a\x7b\x75\xfe\xf3\x9f\xaf\x8b\x12\x2b\x16\x6f\x02\x70\x74\x85\x15\x26\xac\x3b\x44\x0c\x84\x03\x5f\x22\xc4\x37\x60\xa9\x6d\xf8\x79\x88\x1e\xbc\xbd\x3a\x9f\x26\x70\xc6\xd2\x53\x2f\x32\x3b\xe8\xda\x51\x83\xe6\xde\xc1\xc6\xaf\x09\xb3\xb4\x29\x27\xc1\x63\xdc\x39\x6d\x81\x1c\x5c\xc4\x41\x2f\xc1\x97\xc2\x81\x45\x63\xd1\xa1\x8a\xaa\xb0\x03\x16\x68\x09\x53\xa0\x17\xbf\x61\xe1\xa7\x70\x8d\x01\x4f\x70\xa5\xae\x25\x27\x6d\x59\xa3\xf5\x60\xb1\xd0\x2b\x25\xfe\xd3\x40\x76\xe0\x75\xd8\x52\x32\x8f\x49\x1e\xf9\x12\xca\xa3\x55\x4c\x12\x4f\x6b\x3c\x05\xa6\x38\x54\x6c\x0b\x16\x69\x0f\xa8\xd5\x0e\xb4\xb0\xc4\x4d\xe1\x27\x6d\x11\x84\x5a\xea\x39\x94\xde\x1b\x37\x9f\xcd\x56\xc2\x67\xc5\x2f\x74\x55\xd5\x4a\xf8\xed\x2c\xa8\xaf\x58\xd4\x5e\x5b\x37\xe3\xb8\x46\x39\x73\x62\x35\x61\xb6\x28\x85\xc7\xc2\xd7\x16\x67\xcc\x88\x49\x40\x5c\x05\xbd\x9f\x56\xfc\x2b\x9b\xac\xc4\xbd\xde\xc1\xd4\x6f\x49\x0b\x9c\xb7\x42\xad\x9a\xdb\x41\x21\x7b\xf9\x4e\x0a\x49\x62\x66\xe9\xb5\x88\x7f\xcb\x5e\xba\x45\x5c\xf9\xf0\xfd\xf5\x0d\xe4\x4d\x83\x08\xf6\x79\x1e\xb8\xdd\xbe\xe6\x5a\xc6\x13\xa3\x84\x5a\xa2\x8d\x82\x5b\x5a\x5d\x05\x88\xa8\xb8\xd1\x42\xf9\xf0\xa3\x90\x02\xd5\x3e\xd3\x5d\xbd\xa8\x84\x27\x49\xff\xbb\x46\xe7\x49\x3e\x53\x38\x0b\xe6\x0f\x0b\x84\xda\x70\xe6\x91\x4f\xe1\x5c\xc1\x19\xab\x50\x9e\x31\x87\x2f\xce\x76\xe2\xb0\x9b\x10\x4b\x8f\x33\x7e\xd7\x6b\xed\x2f\x8c\xdc\x6a\x6e\x67\xbf\xd2\x29\xa1\x03\x93\xbc\x36\x58\xec\x59\x08\x47\x27\x2c\x69\xb1\x67\x1e\x49\xf7\x0f\x5e\x98\xee\x00\xee\x32\xce\x68\xa0\xa6\xc3\x40\x7b\x09\x83\xe8\x75\x15\x16\x84\xe2\x75\x78\x78\xf8\xe2\x1e\x0d\x67\x07\x8b\x1b\x02\x18\x78\xac\x0c\x59\x1c\xcf\xfa\xe7\x4b\xe6\xa1\x60\x0a\x16\x78\x00\x12\xa0\x76\xc8\xc9\x4c\xd3\xe6\xf4\x2f\x53\x20\x94\xf3\x4c\x15\x18\x7d\x03\x36\x0c\x98\x8e\xa5\x25\xfb\xb3\x41\x1a\x2e\x83\xcc\x3e\xe0\x12\x2d\xd2\x66\xa4\x40\x4c\x28\x07\xa8\x74\xbd\x2a\x83\xce\xd9\x2a\x78\x23\xc2\x4b\xa2\x87\xad\xae\xef\x91\x20\x14\x49\xdb\x83\xb6\x50\x69\x2e\x96\xdb\x80\xb2\x25\xb0\x24\xc5\xe4\xb5\x0e\x5e\xeb\x93\x1b\xf4\x3a\xd7\x4e\x12\xde\x5e\x9d\x67\x87\x9a\x79\x65\x23\x3d\xf7\x76\x1c\xe4\x17\x5d\x4b\x81\x92\x5f\x31\x5f\x1e\xdd\xf5\xf5\xf9\x32\xd1\x17\xc4\xab\x81\x81\x11\x18\xc5\xd5\xf8\xe9\x20\x44\x64\x3c\xde\xec\x00\x09\x40\x56\x68\x31\xad\x3f\x8d\xce\x24\xe9\x4c\xeb\xdb\x49\x24\xc0\x62\xec\x83\xbf\x5f\x5f\x5e\xcc\xfe\xa6\x23\xae\x9d\x30\x59\x51\xa0\x73\xd1\x76\x2a\x54\xfe\x14\x5c\x5d\x94\xc0\x5c\x36\xab\x6b\x7a\x32\xad\x98\x12\x4b\x74\x7e\x9a\x76\x40\xeb\x7e\x79\xf3\x6b\x17\xcf\x00\x7e\xd0\x16\xf0\x13\xab\x8c\xc4\x53\x10\x91\xcb\x8d\x77\xcc\xca\x23\x5c\x64\x44\x03\x0f\x36\xc2\x97\xa2\x9b\x70\x06\x46\xf3\x44\xf0\x26\x10\xea\xd9\x1d\x82\x4e\x84\xd6\x08\x52\xdc\xe1\x1c\x5e\x91\x66\xed\xa0\xf8\x99\xb2\x92\xdf\x5f\x75\xc2\xfc\x7a\x53\xa2\x45\x78\x45\x4b\x5e\x45\xc4\x9a\x00\x48\xf7\xb2\x7e\xb4\x08\x06\xbb\xf4\x56\xac\x56\x68\xb1\x9b\x9b\xc1\xab\x93\xb7\xfc\x86\xd4\x5b\x2c\x41\xe9\x1d\x00\x01\x2c\xc9\xcc\x60\x21\x96\x02\xf9\x3d\x84\x7f\x79\xf3\x6b\x0f\xb6\xfb\x7c\x02\xa1\x38\x7e\x82\x37\x20\x54\xe4\x8a\xd1\xfc\x9b\x29\xdc\x04\x8d\xd8\x2a\xcf\x3e\xd1\x3e\x45\xa9\x1d\x2a\xd0\x4a\x6e\xbb\xb1\xd5\x50\xb2\x35\x82\xd3\x15\xc2\x06\xa5\x9c\x44\xaf\xc4\x61\xc3\xb6\x44\x7f\x16\x17\x69\x18\x03\xc3\xac\xdf\x4f\x2d\x3a\xa1\xde\x5c\xbe\xbb\x9c\x47\xac\x48\x85\x56\x21\x87\xa2\x90\xb5\x14\x94\x40\x50\xe6\x10\xc3\x20\xe9\x64\x60\x47\x1d\x95\x83\xdc\x5a\xc9\xd4\xea\xbe\xd7\x83\xe0\x36\x02\x77\x97\x35\x05\xa6\xe9\xeb\x87\x5a\xeb\x61\x0e\x90\xaf\x8e\x5c\xe0\xd0\x31\xfc\x8f\x22\xea\x28\xb2\x42\xc2\x7e\x94\xac\x8b\x1d\x7d\x1e\x24\x8b\x4a\x07\xab\xd0\x63\xa0\x8c\xeb\xc2\x11\x51\x05\x1a\xef\x66\x7a\x8d\x76\x2d\x70\x33\xdb\x68\x7b\x27\xd4\x6a\x42\x8a\x38\x89\x9a\xe0\x66\x21\xff\x9f\x7d\x15\xfe\x3c\x8a\x8a\x90\xb5\x8f\x23\x25\x2c\xfd\x23\xe8\xa1\x7d\xdc\xec\xc1\xe4\xe4\x24\x71\x6c\x54\x7a\x7d\x1d\x1d\x42\x71\xf8\x26\x99\xc4\xa6\x14\x45\x99\x33\xfe\xd6\x7b\x76\xda\x48\xc5\x78\x74\xb9\x4c\x6d\x5f\x5c\x6d\x89\x91\xb5\x25\x7c\xb6\x93\x54\x81\x4e\x98\xe2\xf4\xbf\x13\xce\xd3\xfd\x07\x73\xae\x16\x23\x8c\xf4\xe3\xf9\xbb\x3f\x46\x99\x6b\xf1\x60\x8b\xec\xcc\x6e\xe9\x32\xcc\xb2\x0a\x3d\xda\x7b\x09\x8c\xf0\x58\x75\x64\x35\x7b\x34\x5f\xe5\xb7\xa1\x60\x86\x04\x92\x6a\x43\x66\x05\x5b\x08\x29\xfc\x36\x39\xe6\xae\xaa\x7b\xff\x5a\x20\x79\xf3\x98\x31\x7a\x11\xf2\x4e\x4a\x18\xda\x24\xf2\xbe\x57\x1f\x4a\xbe\x08\xd1\x25\xab\xa5\xef\x7a\x74\x40\xc5\xbb\xb8\x32\x16\x5b\xe9\xb5\x14\xbf\x63\xa8\x6c\x98\x44\x4b\x8c\xd5\x6b\xc1\x7b\x02\x2d\xc0\x22\xe6\x8d\xfd\x58\xc3\x31\x65\xdb\xc7\x6e\x0c\xfa\xcd\x8f\x56\x0c\x0c\xa4\x56\x2b\xb4\xbb\x4b\x49\x16\xa5\xde\xf4\x20\x4e\x58\xb7\x84\x6e\x84\x94\xa1\x98\x73\xc8\x1f\x47\x83\x70\x46\xb2\xed\x45\x4f\x20\x38\xa4\xa1\x5d\x9d\x4a\x8c\x58\x52\x2c\xb6\xf0\xf1\xdc\x3d\x0a\x81\xbe\x10\x74\xb0\xf3\xab\x8b\x94\xfd\x10\xfd\xbb\x95\x4e\x4a\x5d\x33\x26\x29\xce\xe7\xaa\xa8\x87\x89\x4b\x21\x31\x74\x63\x76\x13\xcd\xdb\xd8\xbe\x3a\xbb\xfc\x78\x71\x73\x4b\x50\x14\xd4\x2e\x97\xef\xd1\x56\x24\x69\x4c\x0f\x4c\x16\x12\xb3\x94\x4a\xfe\x4b\xc5\xa2\x34\xb8\x73\x23\x45\xc1\xdc\x1c\xe0\xf3\x67\x98\x06\x5b\x74\xd3\xb0\x0b\xfc\xde\x93\x5d\x1e\xe1\x19\x55\xf4\x94\x5c\x8f\xe0\xdb\x87\xb4\xb4\xc9\x1a\x5d\xce\xa9\xf7\xac\x25\x43\x04\xaf\xfb\x0c\x06\x1b\x93\x22\x71\x33\x29\x1b\xe3\x71\xa7\x94\xae\x6e\x4a\xf4\x25\xda\x1d\xdb\x24\x0d\x71\xf5\x72\x29\x86\xed\x6b\xa1\xb5\xc4\xce\x9a\x25\x65\xcb\x23\xc8\xbc\x89\x2b\x41\x70\x0a\x31\x81\xcc\x40\xa3\x64\x2a\xaa\xc9\x0a\xbd\x03\xfc\x84\x45\x4d\x2e\x6b\x53\x62\x9f\x18\x63\x3e\xdc\x3a\xcc\x90\x52\xba\xac\x57\xe7\x4d\xa9\x9c\xba\x63\x3b\x4e\xe9\x36\x76\x54\x6e\x7b\x00\x53\x5c\x8d\x08\x85\x14\x3c\x60\x15\x52\x7a\xfc\x24\x9c\x27\x1e\x12\xfb\x36\xc2\x21\x08\xff\xda\xc1\x2d\x47\x23\xf5\xf6\xf6\x51\x56\x15\xdc\xe2\x24\x2c\x1a\xc1\xbc\xad\xc1\x1d\xfd\x88\xea\x4e\x6e\x95\xde\x6f\x48\x0c\xe5\xcd\x6d\xdc\xf1\x31\x48\xf5\xc6\xb6\xfc\x88\x59\xcb\xf6\x2b\x0d\xe2\xd6\xbd\xa0\xc1\x38\x0f\x4d\x6d\x26\xaf\x06\x02\xcb\x7e\xfc\x23\xae\xb7\x04\x32\x70\x68\xe9\x1f\xbd\x84\xab\x92\xb9\x40\x33\x49\x03\x63\x77\x64\x41\x65\x1b\xb9\x05\xdf\xe5\x54\x87\xc3\x99\x09\xf0\x46\x30\x3d\x6d\x5c\x31\x43\x08\x85\xd7\xa2\x3a\x84\xba\x36\x3c\x1d\xac\x93\x7a\xe2\x7e\xdf\x4e\x7b\xe4\x4b\xe1\x42\x29\xe6\x3c\x9a\x44\x7b\x2e\xfd\x7f\x6c\xb2\x9e\x1e\xd0\xb9\x55\xd9\xe3\xed\x8f\xf1\x27\x5e\xfd\x4e\x3f\x5e\x47\xb4\x3b\x5e\x01\xfb\x21\x28\x7b\x5c\xb8\x0e\xb4\x26\x76\xd3\xab\x3b\xdc\xce\xfc\x68\x7a\x69\x03\x40\x61\x87\x45\x99\x15\xe0\xbc\x26\xe7\xc9\xda\x36\x70\x1f\x77\xe0\x98\xe8\x7a\x50\xdf\xe9\xf8\xb9\x9c\xee\x3b\x0c\x58\xc7\xee\x5b\x73\xcc\xd1\x7f\x05\x41\xeb\xa2\xa8\xef\x75\xf6\xf6\xaf\x31\x12\x8c\xd7\x31\x39\xa6\x7d\xc7\x48\x33\x2d\x65\xee\xee\xe8\xae\xa3\x38\xf8\xe0\xad\xfb\xdd\x50\xf7\xba\x4e\x4f\xf6\x50\x70\xce\x5b\xe6\x71\xb5\x1d\xad\xc6\x97\x96\x63\x6c\xd9\x35\xf6\x5c\xea\x4d\xcc\x8a\xea\x45\xe0\x4b\xee\xea\x0c\xcb\x58\x32\x35\x8b\x5e\xa7\xcd\xa0\xc2\x29\x20\x07\x5d\xf7\xf8\x9c\x5d\xba\x06\x79\x7a\x94\x43\xaa\x96\x92\xd2\xa9\x39\x78\x5b\x77\x67\x69\xc3\xec\x1b\x66\xdc\x63\x59\xb6\xc3\x96\x1e\xca\xc6\x33\xeb\xb1\xc1\xf0\x5e\xe4\x6a\x83\x04\x85\xb1\xd6\x6b\xd1\xcf\xc3\xad\x07\xf9\xda\xbb\x69\xa7\xd5\xed\xe1\xf1\x3e\x79\x48\x4a\xfb\xc2\x6a\x60\x6b\x26\x64\xca\x88\x23\xef\x06\xce\x4d\x60\x64\xa1\x7a\xc3\xdc\x5d\xac\xef\x56\x52\x2f\x98\x3c\x05\xa3\xe5\xb6\xd2\xd6\x94\xa2\x00\x41\x31\xb9\xca\x47\x96\x19\x1d\x53\x2f\xa4\x28\x3a\x7b\x94\x2d\x8e\x01\xe7\x07\x86\xf2\xbe\x9e\xdf\x13\x4a\x9a\x23\x2f\x1e\x9e\x63\x0d\x70\x29\x1c\x63\x61\xb5\x40\xee\x22\x17\xb4\x73\x22\x53\x1a\x00\xb9\xd4\xd0\x65\x52\xea\x4d\x9f\x33\xa8\x63\x1f\x7d\xad\x05\x87\x8d\x15\xe1\xb4\xb2\x08\x53\x04\x50\xab\x59\xc5\xac\x2b\x99\x94\xa1\xb7\x4d\xc1\x23\x76\xcf\xb5\x92\x5b\x4a\x91\x7b\x8d\xa4\x40\x1b\x92\x89\xd0\xa3\x75\xc0\xd1\xa0\xe2\x04\x5a\xa7\xea\x8c\x70\xfc\x51\x28\x4e\x28\x22\x70\xbd\x51\x4e\x70\xcc\x67\xd3\x7d\x05\x96\x31\x56\xb3\xa2\x04\xe1\x4e\x23\x3a\x81\x7e\x2a\x48\x42\x0f\x34\xd4\x1b\x4a\xfb\xd8\x95\x4e\x7b\xa7\x5c\xbb\xd7\x9c\xc9\x9a\x7e\x73\x3a\xda\x95\xa3\x08\x2e\x32\x99\x0b\x2c\x74\x85\xc0\xaa\x85\x58\xd5\xba\x76\xcd\xf1\x7d\xaa\x6f\xfa\xf2\x1f\x62\x8c\x9d\xc2\x3f\x10\x2a\xb1\x2a\x3d\x58\x5c\x0b\x27\x7c\x34\x92\x96\x88\xdd\x86\x74\x72\x2b\x43\x25\x49\xc6\x46\x81\x70\xae\xee\x29\xa8\x8e\x47\xee\xfe\x93\xca\xf6\xda\x53\xb6\x9d\x7c\x83\x19\xd3\x1c\x7f\x25\xf4\x35\x55\x77\x82\x49\xaa\x72\xf5\xe9\x60\x10\x6b\x8b\x08\x7a\xb1\xd2\x2e\xcc\x10\x1c\x1e\x5a\xef\xd1\x7d\x3c\xd0\x70\xad\x06\x12\x90\x63\xf5\x25\x5d\x4b\xe6\x99\x7c\x1a\x88\x5c\x07\xf7\x37\x51\x46\x52\x93\xcf\x51\x87\x01\xed\x89\x27\x9f\x35\x05\x1c\x62\x40\xca\xa7\xb7\x87\xe7\x24\x38\x94\xac\xa4\x7e\xd8\xd9\xfb\xf3\x70\xc4\x92\xc2\x5c\x1a\x15\xa0\x44\x93\x0b\x8b\x85\x97\xdb\xbc\xb2\x76\x68\x9f\x83\xd6\x47\x6b\x63\x06\xf0\x12\x2a\x09\x5a\xf5\x79\x8c\x51\xc4\x19\x56\xdc\xb1\xd5\x58\x19\xa2\x08\x8d\x13\xc2\x37\xbf\x19\xe4\x7a\x0a\x52\x17\x4c\x36\xf7\x96\x5a\xf2\x01\xa6\x03\x68\x4b\xfe\xe1\xe3\x87\xf7\x44\x52\x7e\xcb\x33\xbb\x60\x61\x3c\xeb\x09\xe4\xa4\x76\xc8\x93\xb4\xbb\x81\xf2\x83\x90\x0f\x55\xef\xdd\x9e\x5e\xec\xde\x7d\x4d\xbc\xf1\x6d\xc7\xef\x36\x3f\x76\x7d\x0d\x18\xba\x22\x0b\xbf\x89\x43\x34\xf9\x6c\x04\xe1\x5b\xc3\x2c\x2a\xff\x6d\x3b\x0a\xb1\x42\x45\xea\x15\x0a\xae\x06\xf1\x21\xc0\x84\x53\x1e\xaf\x30\xda\xd4\x01\xd3\x00\xbb\x28\x85\xe4\xdf\x36\xad\xa3\x29\x85\xee\x69\xd3\x92\xef\x4f\xd3\xc7\xb0\x54\xf4\x35\x78\x60\x4c\x95\xb4\x9f\x6a\x0a\x83\x69\x38\x86\xee\x2e\x52\x9a\xcc\x22\x69\x99\x1f\x1c\x16\xc3\xc5\x11\x0b\x80\x72\x22\x97\x0b\x63\xc5\xdb\xe3\xa7\xa1\xea\x7a\x6c\xe9\x89\x6a\x3d\xac\x45\xf1\x1a\x5d\xfe\x2d\x9f\x13\xd8\x1d\x0e\xd6\x73\x0f\x83\xd5\x9b\x84\x3e\x18\xd8\xa8\xb2\x75\x44\x61\x06\xa3\x6a\x5b\xa3\x07\xf0\x1e\x81\x71\x33\x9f\xf7\x04\xfd\x1e\xc5\x98\x67\xa3\x78\xc3\x94\xff\xde\x1e\xf5\x91\x43\xb9\xc4\xa0\x88\x1e\xd1\x40\x6d\x7c\xe2\xe3\x9a\xa8\x03\xfc\xdb\x2f\x48\xf2\x36\xb1\x76\xcb\xed\xb4\xc6\xe2\x43\x88\xfd\xe7\xdb\x9f\xde\xb7\x08\x41\x72\xdf\xf7\xf6\x3c\x38\xc0\x71\xc9\x65\x07\x17\x42\x37\xec\x8e\x23\x49\xb3\x90\x54\xdb\x75\xcf\xaa\x75\x30\xab\x36\x2b\xcb\x38\x09\xfc\x07\xab\xab\xc1\xa2\xf7\xe3\xde\xd2\x40\x56\x2c\xb6\x0e\x2a\x5d\xd7\xce\xdc\x45\xe8\xf7\xb5\x28\xa4\x18\xcf\x53\x23\x3f\xd3\x1c\xdd\x23\x27\xe9\x8e\xb9\xe8\xe1\x69\xba\xa7\xcd\xd3\x1d\x35\xe8\xc1\x99\xba\x27\x4e\xd5\xf5\xd5\x53\xea\xf1\x73\x75\x7d\x15\x49\xc8\xd8\x5f\x60\xb2\xee\x25\x66\xeb\x5e\x66\xba\xee\x85\xe6\xeb\x5e\x70\xc2\xee\x49\x33\x76\x7d\x25\x92\x92\xdb\x47\x4e\xd9\xf5\x6b\x6b\x3e\xb8\x7c\xe8\x9c\x5d\x5f\x03\xe5\x70\xfa\x6e\xc4\xa4\xdd\x51\x3b\xee\x4f\x7a\xbe\xfc\x79\xbb\xe7\x1a\x78\xf8\x12\xa6\xee\x46\xd1\xd2\x3b\x79\xf7\x85\xce\xde\x8d\x98\xae\x38\x3a\x7f\xf7\xd4\x09\xbc\xbe\x46\x92\xfb\xbf\x98\xc1\x3b\xca\xc1\x9e\x39\xbc\x2f\x6e\x12\xef\xf9\x27\x16\xd6\x0f\xfa\x0a\xa4\xfb\x63\x16\xcf\x7c\xed\x46\x7f\xce\x12\x56\xef\x7d\xd0\xa2\x17\x0e\xed\x7a\xe4\x17\x2d\x1d\x28\x1c\xdc\x6a\x3f\x00\x4c\xdf\x1a\x36\xb7\x02\x92\x93\xf4\xd5\x5f\xfb\x14\x20\xee\xbf\x53\x50\x39\xaf\x2d\x5b\xe5\x12\xab\xa5\x90\x92\x1c\xe3\x91\x5f\x1c\x7e\xfe\xf7\x2a\x46\xd9\xfc\x3d\x5f\xf8\x59\x68\x15\x8b\x16\x37\x87\x5f\x7e\x3d\x81\xd4\x5c\xc8\x49\x78\xb8\xf9\xdf\x00\x00\x00\xff\xff\x1a\xdf\x0e\x92\x36\x39\x00\x00")

func configCrdsKudoDev_operatorversionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_configCrdsKudoDev_operatorversionsYaml,
		"config/crds/kudo.dev_operatorversions.yaml",
	)
}

func configCrdsKudoDev_operatorversionsYaml() (*asset, error) {
	bytes, err := configCrdsKudoDev_operatorversionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/crds/kudo.dev_operatorversions.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config/crds/kudo.dev_instances.yaml":        configCrdsKudoDev_instancesYaml,
	"config/crds/kudo.dev_operators.yaml":        configCrdsKudoDev_operatorsYaml,
	"config/crds/kudo.dev_operatorversions.yaml": configCrdsKudoDev_operatorversionsYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"config": &bintree{nil, map[string]*bintree{
		"crds": &bintree{nil, map[string]*bintree{
			"kudo.dev_instances.yaml":        &bintree{configCrdsKudoDev_instancesYaml, map[string]*bintree{}},
			"kudo.dev_operators.yaml":        &bintree{configCrdsKudoDev_operatorsYaml, map[string]*bintree{}},
			"kudo.dev_operatorversions.yaml": &bintree{configCrdsKudoDev_operatorversionsYaml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
