# Create an OperatorVersion with a parameter and its corresponding trigger.
#
# The next step will update the parameter and verify that it triggers the
# creation of a `PlanExecution` for the plan defined as a trigger.
apiVersion: kudo.k8s.io/v1alpha1
kind: OperatorVersion
metadata:
  name: icto-custom-trigger
spec:
  version: "1.0"
  parameters:
  - name: foo
    trigger: foo-changed
  plans:
    deploy:
    update:
    foo-changed:
---
apiVersion: kudo.k8s.io/v1alpha1
kind: Instance
metadata:
  name: icto-custom-trigger
  labels:
    operator: icto-custom-trigger
spec:
  operatorVersion:
    name: icto-custom-trigger
    kind: OperatorVersion
---
# Create an OperatorVersion with a parameter without a trigger and an `update`
# plan.
#
# The next step will update the parameter and verify that it triggers the creation
# of a `PlanExecution` for the `update` plan.
apiVersion: kudo.k8s.io/v1alpha1
kind: OperatorVersion
metadata:
  name: icto-no-trigger
spec:
  version: "1.0"
  parameters:
  - name: foo
  plans:
    deploy:
    update:
---
apiVersion: kudo.k8s.io/v1alpha1
kind: Instance
metadata:
  name: icto-no-trigger
  labels:
    operator: icto-no-trigger
spec:
  operatorVersion:
    name: icto-no-trigger
    kind: OperatorVersion
---
# Create an OperatorVersion with a parameter without a trigger and without an
# `update` plan.
#
# The next step will update the parameter and verify that it triggers the creation
# of a `PlanExecution` for the `deploy` plan.
apiVersion: kudo.k8s.io/v1alpha1
kind: OperatorVersion
metadata:
  name: icto-fallback-to-deploy
spec:
  operator:
    name: icto-fallback-to-deploy
    kind: Operator
  version: "1.0"
  parameters:
  - name: foo
  plans:
    deploy:
---
apiVersion: kudo.k8s.io/v1alpha1
kind: Instance
metadata:
  name: icto-fallback-to-deploy
  labels:
    operator: icto-fallback-to-deploy
spec:
  operatorVersion:
    name: icto-fallback-to-deploy
    kind: OperatorVersion
