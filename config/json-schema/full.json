{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$recursiveAnchor": true,
  "$id": "https://kudo.dev/json-schema-full",
  "title": "KUDO JSON-Schema",
  "type": ["object", "boolean"],
  "additionalProperties": false,
  "properties": {
    "$id": {
      "type": "string",
      "format": "uri-reference",
      "$comment": "Non-empty fragments not allowed.",
      "pattern": "^[^#]*#?$"
    },
    "$schema": {
      "type": "string",
      "format": "uri"
    },
    "$anchor": {
      "type": "string",
      "pattern": "^[A-Za-z][-A-Za-z0-9.:_]*$"
    },
    "$ref": {
      "type": "string",
      "format": "uri-reference"
    },
    "$recursiveRef": {
      "type": "string",
      "format": "uri-reference"
    },
    "$recursiveAnchor": {
      "type": "boolean",
      "default": false
    },
    "$comment": {
      "type": "string"
    },
    "$defs": {
      "type": "object",
      "additionalProperties": { "$recursiveRef": "#" },
      "default": {}
    },
    "title": {
      "type": "string"
    },
    "description": {
      "type": "string"
    },
    "examples": {
      "type": "array",
      "items": true
    },
    "default": true,
    "multipleOf": {
      "type": "number",
      "exclusiveMinimum": 0
    },
    "maximum": {
      "type": "number"
    },
    "exclusiveMaximum": {
      "type": "number"
    },
    "minimum": {
      "type": "number"
    },
    "exclusiveMinimum": {
      "type": "number"
    },
    "maxLength": { "$ref": "#/$defs/nonNegativeInteger" },
    "minLength": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },
    "pattern": {
      "type": "string",
      "format": "regex"
    },
    "maxItems": { "$ref": "#/$defs/nonNegativeInteger" },
    "minItems": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },
    "uniqueItems": {
      "type": "boolean",
      "default": false
    },
    "maxContains": { "$ref": "#/$defs/nonNegativeInteger" },
    "minContains": {
      "$ref": "#/$defs/nonNegativeInteger",
      "default": 1
    },
    "maxProperties": { "$ref": "#/$defs/nonNegativeInteger" },
    "minProperties": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },
    "required": { "$ref": "#/$defs/stringArray" },
    "dependentRequired": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/$defs/stringArray"
      }
    },
    "const": true,
    "enum": {
      "type": "array",
      "items": true
    },
    "type": {
      "anyOf": [
        { "$ref": "#/$defs/simpleTypes" },
        {
          "type": "array",
          "items": { "$ref": "#/$defs/simpleTypes" },
          "minItems": 1,
          "uniqueItems": true
        }
      ]
    },
    "additionalItems": { "$recursiveRef": "#" },
    "unevaluatedItems": { "$recursiveRef": "#" },
    "items": {
      "anyOf": [
        { "$recursiveRef": "#" },
        { "$ref": "#/$defs/schemaArray" }
      ]
    },
    "contains": { "$recursiveRef": "#" },
    "unevaluatedProperties": { "$recursiveRef": "#" },
    "properties": {
      "type": "object",
      "additionalProperties": { "$recursiveRef": "#" },
      "default": {}
    },
    "patternProperties": {
      "type": "object",
      "additionalProperties": { "$recursiveRef": "#" },
      "propertyNames": { "format": "regex" },
      "default": {}
    },
    "dependentSchemas": {
      "type": "object",
      "additionalProperties": {
        "$recursiveRef": "#"
      }
    },
    "propertyNames": { "$recursiveRef": "#" },
    "if": { "$recursiveRef": "#" },
    "then": { "$recursiveRef": "#" },
    "else": { "$recursiveRef": "#" },
    "allOf": { "$ref": "#/$defs/schemaArray" },
    "anyOf": { "$ref": "#/$defs/schemaArray" },
    "oneOf": { "$ref": "#/$defs/schemaArray" },
    "not": { "$recursiveRef": "#" },
    "advanced": {
      "type":  "boolean",
      "default": false
    },
    "hint": {
      "type": "string"
    },
    "listName": {
      "type": "string"
    },
    "trigger": {
      "type": "string"
    },
    "immutable": {
      "type": "boolean",
      "default": false
    },
    "priority": {
      "type": "integer"
    }
  },
  "$defs": {
    "schemaArray": {
      "type": "array",
      "minItems": 1,
      "items": { "$recursiveRef": "#" }
    },
    "nonNegativeInteger": {
      "type": "integer",
      "minimum": 0
    },
    "nonNegativeIntegerDefault0": {
      "$ref": "#/$defs/nonNegativeInteger",
      "default": 0
    },
    "simpleTypes": {
      "enum": [
        "array",
        "boolean",
        "integer",
        "null",
        "number",
        "object",
        "string"
      ]
    },
    "stringArray": {
      "type": "array",
      "items": { "type": "string" },
      "uniqueItems": true,
      "default": []
    }
  }
}
