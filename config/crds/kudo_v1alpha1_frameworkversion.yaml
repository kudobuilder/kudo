apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: frameworkversions.kudo.k8s.io
spec:
  group: kudo.k8s.io
  names:
    kind: FrameworkVersion
    plural: frameworkversions
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            connectionString:
              description: ConnectionString defines a mustached string that can be
                used to connect to an instance of the Framework
              type: string
            dependencies:
              items:
                properties:
                  referenceName:
                    description: Name specifies the name of the dependency.  Referenced
                      via this in defaults.config
                    type: string
                  version:
                    description: 'Version captures the requirements for what versions
                      of the above object are allowed Example: ^3.1.4'
                    type: string
                required:
                - referenceName
                - version
                type: object
              type: array
            framework:
              type: object
            parameters:
              items:
                properties:
                  default:
                    description: Default is a default value if no paramter is provided
                      by the instance
                    type: string
                  description:
                    description: Description captures a longer description of how
                      the variable will be used
                    type: string
                  displayName:
                    description: DisplayName can be used by UI's looking to
                    type: string
                  name:
                    description: 'Name is the string that should be used in the mustached
                      file for example, if `name: COUNT` then using the variable in
                      a spec like:  spec:   replicas:  {{COUNT}}'
                    type: string
                  required:
                    description: Required specifies if the parameter is required to
                      be provided by all instances, or whether a default can suffice
                    type: boolean
                  trigger:
                    description: Trigger identifies the plan that gets executed when
                      this parameter changes in the Instance object. Default is `update`
                      if present, or `deploy` if not present
                    type: string
                type: object
              type: array
            plans:
              description: Plans specify a map a plans that specify how to
              type: object
            tasks:
              type: object
            templates:
              description: Yaml captures a mustached yaml list of elements that define
                the application framework instance
              type: object
            upgradableFrom:
              description: UpgradableFrom lists all FrameworkVersions that can upgrade
                to this FrameworkVersion
              items:
                type: object
              type: array
            version:
              type: string
          type: object
        status:
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
