
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.6
  creationTimestamp: null
  name: instances.kudo.dev
spec:
  group: kudo.dev
  names:
    kind: Instance
    listKind: InstanceList
    plural: instances
    singular: instance
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Instance is the Schema for the instances API.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: InstanceSpec defines the desired state of Instance.
          properties:
            operatorVersion:
              description: OperatorVersion specifies a reference to a specific OperatorVersion
                object.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            parameters:
              additionalProperties:
                type: string
              type: object
            planExecution:
              description: 'There are two ways a plan execution can be triggered:  1)
                indirectly through update of a corresponding parameter in the InstanceSpec.Parameters
                map  2) directly through setting of the InstanceSpec.PlanExecution.PlanName
                field While indirect (1) triggers happens every time a user changes
                a parameter, a directly (2) triggered plan is reserved for the situations
                when parameters doesn''t change e.g. a periodic backup is triggered
                overriding the existing backup file. Additionally, this opens room
                for canceling and overriding currently running plans in the future.
                Note: PlanExecution field defines plan name and corresponding parameters
                that IS CURRENTLY executed. Once the instance controller (IC) is done
                with the execution, this field will be cleared. Each plan execution
                has a unique UID so should the same plan be re-triggered it will have
                a new UID'
              properties:
                planName:
                  type: string
                status:
                  description: ExecutionStatus captures the state of the rollout.
                  type: string
                uid:
                  description: UID is a type that holds unique ID values, including
                    UUIDs.  Because we don't ONLY use UUIDs, this is an alias to string.  Being
                    a type captures intent and helps make sure that UIDs and names
                    do not get conflated.
                  type: string
              type: object
          type: object
        status:
          description: InstanceStatus defines the observed state of Instance
          properties:
            planStatus:
              additionalProperties:
                description: "PlanStatus is representing status of a plan \n These
                  are valid states and transitions \n                       | Never
                  executed |                               |                               v
                  |    Error    |<------>|    Pending     |       ^                       |
                  \      |                       v       |               +-------+--------+
                  \      |               +-------+--------+       |                       |
                  \      v                       v | Fatal error |        |    Complete
                  \   |"
                properties:
                  lastUpdatedTimestamp:
                    format: date-time
                    nullable: true
                    type: string
                  message:
                    type: string
                  name:
                    type: string
                  phases:
                    items:
                      description: PhaseStatus is representing status of a phase
                      properties:
                        message:
                          type: string
                        name:
                          type: string
                        status:
                          description: ExecutionStatus captures the state of the rollout.
                          type: string
                        steps:
                          items:
                            description: StepStatus is representing status of a step
                            properties:
                              message:
                                type: string
                              name:
                                type: string
                              status:
                                description: ExecutionStatus captures the state of
                                  the rollout.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  status:
                    description: ExecutionStatus captures the state of the rollout.
                    type: string
                  uid:
                    description: UID is a type that holds unique ID values, including
                      UUIDs.  Because we don't ONLY use UUIDs, this is an alias to
                      string.  Being a type captures intent and helps make sure that
                      UIDs and names do not get conflated.
                    type: string
                type: object
              description: slice would be enough here but we cannot use slice because
                order of sequence in yaml is considered significant while here it's
                not
              type: object
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
