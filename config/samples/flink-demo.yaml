apiVersion: kudo.k8s.io/v1alpha1
kind: Operator
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: flink-financial-demo
---
apiVersion: kudo.k8s.io/v1alpha1
kind: OperatorVersion
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: flink-financial-demo
  namespace: default
spec:
  operator:
    name: flink-financial-demo
    kind: Operator
  # Add fields here
  parameters:
  - name: DOWNLOAD_URL
    description: URL To download the application from
    default: "https://downloads.mesosphere.com/dcos-demo/flink/flink-job-1.0.jar"
  templates:
    zookeeper.yaml: |
      apiVersion: kudo.k8s.io/v1alpha1
      kind: Instance
      metadata:
        labels:
          controller-tools.k8s.io: "1.0"
          operator: zookeeper
        name: zk
      spec:
        operatorVersion:
          name: zookeeper-1.0
          namespace: default
          type: OperatorVersions
        # Add fields here
        name: "zk"
        parameters:
          ZOOKEEPER_CPUS: "0.3"
    kafka.yaml: |
      apiVersion: kudo.k8s.io/v1alpha1
      kind: Instance
      metadata:
        labels:
          controller-tools.k8s.io: "1.0"
          operator: kafka
        name: kafka
      spec:
        operatorVersion:
          name: kafka-2.11-2.4.0
          namespace: default
          type: OperatorVersion
        parameters:
          KAFKA_ZOOKEEPER_URI: "{{ .Name }}-zk-{{ .Name }}-zk-0.{{ .Name }}-zk-hs:2181,{{ .Name }}-zk-{{ .Name }}-zk-1.{{ .Name }}-zk-hs:2181,{{ .Name }}-zk-{{ .Name }}-zk-2.{{ .Name }}-zk-hs:2181"
          KAFKA_ZOOKEEPER_PATH: "/kafka"
          BROKER_COUNT: "3"
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    flink.yaml: |
      apiVersion: kudo.k8s.io/v1alpha1
      kind: Instance
      metadata:
        labels:
          controller-tools.k8s.io: "1.0"
          operator: flink
        name: flink
      spec:
        operatorVersion:
          name: flink
          namespace: default
          type: OperatorVersion
    generator.yaml: |
      apiVersion: apps/v1beta1
      kind: Deployment
      metadata:
        name: generator
      spec:
        replicas: 1
        template:
          metadata:
            name: flink-demo-generator
            labels:
              app: flink-demo-generator
          spec:
            containers:
            - name: flink-demo-generator
              image: mesosphere/flink-generator:0.1
              command: ["/generator-linux"]
              imagePullPolicy: Always
              args: ["--broker", "{{ .Name }}-kafka-kafka-0.{{ .Name }}-kafka-svc:9093"]
    actor.yaml: |
      apiVersion: apps/v1beta1
      kind: Deployment
      metadata:
        name: actor
      spec:
        replicas: 1
        template:
          metadata:
            name: flink-demo-actor
            labels:
              app: flink-demo-actor
          spec:
            containers:
            - name: actor
              image: mesosphere/flink-demo-actor:0.2
              command: ["/fraudDisplay-linux"]
              imagePullPolicy: Always
              args: ["--broker", "{{ .Name }}-kafka-kafka-0.{{ .Name }}-kafka-svc:9093"]
    uploader.yaml: |
      apiVersion: batch/v1
      kind: Job
      metadata:
        namespace: default
        name: submit-flink-job
      spec:
        template:
          metadata:
            name: {{ .PlanName }}-job
          spec:
            restartPolicy: OnFailure
            containers:
            - env:
              - name: DOWNLOAD_URL
                value: {{ .Params.DOWNLOAD_URL }}
              - name: JOBMANAGER
                value: {{ .Name }}-flink-jobmanager
              name: {{ .PlanName }}
              image: bash
              imagePullPolicy: Always
              command:
                - "/usr/local/bin/bash"
              args: ['-c',
              'export JOB_FILENAME=$(basename $DOWNLOAD_URL); echo "DOWNLOAD_URL: $DOWNLOAD_URL FILE: $JOB_FILENAME JOBMANAGER: $JOBMANAGER"; apk add --no-cache jq curl;
              curl -s $DOWNLOAD_URL -o $JOB_FILENAME;
              curl -s -X POST -H "Expect:" -F "jarfile=@$JOB_FILENAME" $JOBMANAGER:8081/jars/upload;
              while true; do date; export JAR_ID=$(curl -s $JOBMANAGER:8081/jars | jq -r ".files[].id");
              if [ -z $JAR_ID ];
              then
              echo "No uploaded jar detected";
              else
              echo "Found jar $JAR_ID";
              export SUBMIT_MSG=$(curl -s -X POST -H "Expect:" $JOBMANAGER:8081/jars/$JAR_ID/run?program-args=--kafka_host%20{{ .Name }}-kafka-kafka-1.{{ .Name }}-kafka-svc.default.svc.cluster.local:9093 | jq -r ".errors");
              echo "RESPONSE: $SUBMIT_MSG";
              if [ $SUBMIT_MSG == "null" ];
              then
              echo "SUBMITTED JOB!";
              exit 0;
              else
              echo "Failed to submit job: $SUBMIT_MSG";
              fi;
              fi;
              echo "=====================";
              sleep 5; done;']
  tasks:
    kafka:
      resources:
      - kafka.yaml
    zookeeper:
      resources:
      - zookeeper.yaml
    flink:
      resources:
      - flink.yaml
    generator:
      resources:
      - generator.yaml
    actor:
      resources:
      - actor.yaml
    upload:
      resources:
      - uploader.yaml
  plans:
    deploy:
      strategy: serial
      phases:
        - name: dependencies
          strategy: serial
          steps:
            - name: zookeeper
              tasks:
              - zookeeper
            - name: kafka
              tasks:
              - kafka
        - name: flink-cluster
          strategy: serial
          steps:
            - name: flink
              tasks:
              - flink
        - name: demo
          strategy: serial
          steps:
            - name: gen
              tasks:
              - generator
            - name: act
              tasks:
              - actor
    upload:
      strategy: serial
      phases:
        - name: dependencies
          strategy: serial
          steps:
            - name: upload
              tasks:
              - upload
---
apiVersion: kudo.k8s.io/v1alpha1
kind: Instance
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
    operator: flink-financial-demo
  name: demo
spec:
  operatorVersion:
    name: flink-financial-demo
    namespace: default
    type: OperatorVersion
  parameters:
    NONE: "true"
